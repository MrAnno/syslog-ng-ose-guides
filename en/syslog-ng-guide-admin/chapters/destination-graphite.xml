<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE section
 [  <!ENTITY % entities SYSTEM "../../common/syslog-ng-entities.ent">
 %entities;]>
<section xml:id="configuring-destinations-graphite" xmlns="http://docbook.org/ns/docbook" version="5.0">
    <title>Sending metrics to Graphite</title>
    <indexterm>
        <primary>destination drivers</primary>
        <secondary>graphite()</secondary>
    </indexterm>
    <para>There are many ways to feed the Graphite template function with name value pairs. The syslog-ng CSV and PatternDB parsers (for details, see <xref linkend="syslog-ng-patterndb-using-parsers"/>) can parse log messages and generate name value pairs based on message content. The CSV parser (for details, see <xref linkend="csv-parser"/>) can be used for logs which have a constant field based structure, like the Apache web server access logs. The patterndb parser can parse information and can extract important fields from free form log messages, as long as patterns describing the log messages are available. Another way is to send JSON-based log messages (for details, see <xref linkend="json-parser"/>) to syslog-ng, like running a simple shell script collecting metrics and running it from cron regularly.</para>
    <synopsis>Declaration:
         graphite(payload() options());</synopsis>
    <example xml:id="example-destination-graphite">
        <title>Using the graphite() driver</title>
        <para> To use the graphite() destination, the only mandatory parameter is payload, which specifies the value pairs to send to graphite. In the following example any value pairs starting with "monitor." are forwarded to graphite.</para>
        <synopsis>destination d_graphite { graphite(payload("--key monitor.*")); };</synopsis>
    </example>
    <note>
        <para>The <parameter>graphite()</parameter> destination is only a wrapper around the <parameter>tcp()</parameter> destination and the <parameter>graphite-output</parameter> template function. If you want to fine-tune the TCP parameters, use the <parameter>tcp()</parameter> destination instead, as described in <xref linkend="template-function-graphite"/>.</para>
    </note>
    <section xml:id="reference-destination-graphite">
        <title>graphite() destination options</title>
        <indexterm>
            <primary>destination drivers</primary>
            <secondary><parameter>graphite()</parameter> driver</secondary>
        </indexterm>
        <para>The <parameter>graphite()</parameter> destination has the following options:</para>
        <simplesect xml:id="graphite-option-host">
            <title>host()</title>
            <indexterm type="parameter">
                <primary>host()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>hostname or IP address</entry>
                        </row>
                        <row>
                            <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>localhost</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The hostname or IP address of the Graphite server.</para>
        </simplesect>
        <simplesect xml:id="graphite-option-port">
            <title>port()</title>
            <indexterm type="parameter">
                <primary>port()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>number</entry>
                        </row>
                        <row>
                            <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>2003</entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The port number of the Graphite server.</para>
        </simplesect>
        <simplesect xml:id="graphite-option-payload">
            <title>payload()</title>
            <indexterm type="parameter">
                <primary>payload()</primary>
            </indexterm>
            <informaltable frame="topbot" colsep="0" rowsep="0">
                <tgroup cols="2">
                    <colspec colnum="1" colwidth="40pt"/>
                    <tbody>
                        <row>
                            <entry>Type: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry>parameter list of the <parameter>payload()</parameter> option</entry>
                        </row>
                        <row>
                            <entry>Default: <?dbhtml bgcolor="#D4D6EB" ?><?dbfo bgcolor="#D4D6EB" ?></entry>
                            <entry><synopsis>empty string</synopsis></entry>
                        </row>
                    </tbody>
                </tgroup>
            </informaltable>
            <para><emphasis role="bold">Description:</emphasis> The payload() option allows you to select which value pairs to forward to graphite. For details on using the payload() option, see <xref linkend="template-function-graphite"/>.</para>
            <note>
                <para>If left empty, there is no data to be forwarded to Graphite.</para>
            </note>
        </simplesect>
    </section>
</section>
