<?xml version="1.0" encoding="UTF-8"?>
%entities;]&gt;
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
 <body name="reference-macros" oldrole="section">
  <h1 name="reference-macros" oldrole="section">
   Macros of
   <MadCap:variable name="General.abbrev">
    abbrev
   </MadCap:variable>
  </h1>
  <MadCap:keyword term="macros:['reference']">
  </MadCap:keyword>
  <p oldrole="para">
   The following macros are available in
   <MadCap:variable name="General.abbrev">
    abbrev
   </MadCap:variable>
   .
  </p>
  <table cellspacing="0" class="TableStyle-NoteTable_Yellow_DoNotEdit" oldrole="warning" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Yellow_DoNotEdit.css');">
   <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column1" style="width: 0.3in;">
   </col>
   <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column2">
   </col>
   <tbody>
    <tr class="TableStyle-NoteTable_Yellow_DoNotEdit-Body-Body1">
     <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyB-Column1-Body1">
      <p>
       <img src="../../Resources/Images/Common/caution.png"/>
      </p>
     </td>
     <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyA-Column2-Body1">
      <span class="Yellow">
       Caution:
      </span>
      <p oldrole="para">
       These macros are available when
       <MadCap:variable name="General.abbrev">
        abbrev
       </MadCap:variable>
       successfully parses the incoming message as a syslog message, or you use some other parsing method and map the parsed values to these macros.
      </p>
      <MadCap:snippetBlock src="../../shared/chunk/para-flags-no-parse.htm">
      </MadCap:snippetBlock>
     </td>
    </tr>
   </tbody>
  </table>
  <h6 name="macro-ampm" oldrole="simplesect">
   AMPM
  </h6>
  <MadCap:keyword term="AMPM">
  </MadCap:keyword>
  <MadCap:keyword term="${AMPM}">
  </MadCap:keyword>
  <p oldrole="para">
   <i oldrole="emphasis" role="bold">
    Description:
   </i>
   Typically used together with the
   <a href="reference-macros.htm">
    <span class="Code" oldrole="parameter">
     ${HOUR12}
    </span>
   </a>
   macro,
   <span class="Code" oldrole="parameter">
    ${AMPM}
   </span>
   returns the period of the day: AM for hours before mid day and PM for hours after mid day. In reference to a 24-hour clock format, AM is between 00:00-12:00 and PM is between 12:00-24:00. 12AM is midnight. Available in
   <phrase condition="pe">
    <entity>
     abbrev
    </entity>
    3.2
   </phrase>
   <phrase condition="ose">
    <entity>
     abbrev
    </entity>
    3.4
   </phrase>
   and later.
  </p>
  <simplesect xml:id="macro-bsdtag">
   <title>
    BSDTAG
   </title>
   <indexterm type="parameter">
    <primary>
     BSDTAG
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${BSDTAG}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    Facility/priority information in the format used by the FreeBSD syslogd: a priority number followed by a letter that indicates the facility. The priority number can range from
    <span class="Code" oldrole="userinput">
     0
    </span>
    to
    <span class="Code" oldrole="userinput">
     7
    </span>
    . The facility letter can range from
    <span class="Code" oldrole="userinput">
     A
    </span>
    to
    <span class="Code" oldrole="userinput">
     Y
    </span>
    , where
    <span class="Code" oldrole="userinput">
     A
    </span>
    corresponds to facility number zero (LOG_KERN),
    <span class="Code" oldrole="userinput">
     B
    </span>
    corresponds to facility 1 (LOG_USER), and so on.
   </p>
  </simplesect>
  <simplesect xml:id="macro-custom">
   <title>
    Custom macros
   </title>
   <indexterm type="parameter">
    <primary>
     Custom macros
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    CSV parsers and pattern databases can also define macros from the content of the messages, for example, a pattern database rule can extract the username from a login message and create a macro that references the username. For details on using custom macros created with CSV parsers and pattern databases, see
    <xref linkend="chapter-parsers">
    </xref>
    and
    <xref linkend="patterndb-filters">
    </xref>
    , respectively.
   </p>
  </simplesect>
  <MadCap:snippetBlock src="../../shared/chunk/macro-date.htm">
  </MadCap:snippetBlock>
  <MadCap:snippetBlock src="../../shared/chunk/macro-day.htm">
  </MadCap:snippetBlock>
  <simplesect xml:id="macro-facility">
   <title>
    FACILITY
   </title>
   <indexterm type="parameter">
    <primary>
     FACILITY
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${FACILITY}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The name of the facility (for example,
    <span class="Code" oldrole="parameter">
     kern
    </span>
    ) that sent the message.
   </p>
  </simplesect>
  <simplesect xml:id="macro-facility-num">
   <title>
    FACILITY_NUM
   </title>
   <indexterm type="parameter">
    <primary>
     FACILITY_NUM
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${FACILITY_NUM}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The numerical code of the facility (for example,
    <span class="Code" oldrole="userinput">
     0
    </span>
    ) that sent the message.
   </p>
  </simplesect>
  <simplesect xml:id="macro-filename">
   <title>
    FILE_NAME
   </title>
   <indexterm type="parameter">
    <primary>
     FILE_NAME
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${FILE_NAME}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    Name of the log file (including its path) from where
    <entity>
     abbrev
    </entity>
    received the message (only available if
    <entity>
     abbrev
    </entity>
    received the message from a
    <a href="source-file.htm">
     file
    </a>
    or a
    <a href="source-wildcard-file.htm">
     wildcard-file
    </a>
    source). If you need only the path or the filename, use the
    <a href="reference-template-functions.htm">
     <span class="Code" oldrole="parameter">
      dirname
     </span>
    </a>
    and
    <a href="reference-template-functions.htm">
     <span class="Code" oldrole="parameter">
      basename
     </span>
    </a>
    template functions.
   </p>
  </simplesect>
  <MadCap:snippetBlock src="../../shared/chunk/macro-fulldate.htm">
  </MadCap:snippetBlock>
  <simplesect xml:id="macro-fullhost">
   <title>
    FULLHOST
   </title>
   <indexterm type="parameter">
    <primary>
     FULLHOST
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${FULLHOST}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The name of the source host where the message originates from.
   </p>
   <ul oldrole="itemizedlist">
    <li oldrole="listitem">
     <p oldrole="para">
      If the message traverses several hosts and the
      <a href="chapter-global-options.htm">
       <span class="Code" oldrole="parameter">
        chain-hostnames()
       </span>
      </a>
      option is on, the first host in the chain is used.
     </p>
    </li>
    <li oldrole="listitem">
     <p oldrole="para">
      If the
      <a href="chapter-global-options.htm">
       <span class="Code" oldrole="parameter">
        keep-hostname()
       </span>
      </a>
      option is disabled (
      <span class="Code" oldrole="userinput">
       keep-hostname(no)
      </span>
      ), the value of the $FULLHOST macro will be the DNS hostname of the host that sent the message to
      <entity>
       abbrev
      </entity>
      (that is, the DNS hostname of the last hop). In this case the $FULLHOST and $FULLHOST_FROM macros will have the same value.
     </p>
    </li>
    <li oldrole="listitem">
     <p oldrole="para">
      If the
      <a href="chapter-global-options.htm">
       <span class="Code" oldrole="parameter">
        keep-hostname()
       </span>
      </a>
      option is enabled (
      <span class="Code" oldrole="userinput">
       keep-hostname(yes)
      </span>
      ), the value of the $FULLHOST macro will be the hostname retrieved from the log message. That way the name of the original sender host can be used, even if there are log relays between the sender and the server.
     </p>
     <table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');">
      <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;">
      </col>
      <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2">
      </col>
      <tbody>
       <tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1">
        <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1">
         <p>
          <img src="../../Resources/Images/Common/note.png"/>
         </p>
        </td>
        <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1">
         <span class="AllNoteStyles">
          NOTE:
         </span>
         <MadCap:snippetBlock src="../../shared/chunk/p-keep-hostname-macro.htm">
         </MadCap:snippetBlock>
        </td>
       </tr>
      </tbody>
     </table>
    </li>
   </ul>
   <MadCap:snippetBlock src="../../shared/chunk/p-name-resolution.htm">
   </MadCap:snippetBlock>
  </simplesect>
  <simplesect xml:id="macro-fullhost-from">
   <title>
    FULLHOST_FROM
   </title>
   <indexterm type="parameter">
    <primary>
     FULLHOST_FROM
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${FULLHOST_FROM}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The FQDN of the host that sent the message to syslog-ng as resolved by syslog-ng using DNS. If the message traverses several hosts, this is the last host in the chain.
   </p>
   <p oldrole="para">
    The
    <entity>
     abbrev
    </entity>
    application uses the following procedure to determine the value of the
    <span class="Code" oldrole="parameter">
     $FULLHOST_FROM
    </span>
    macro:
   </p>
   <ol oldrole="orderedlist">
    <li oldrole="listitem">
     <p oldrole="para">
      The
      <entity>
       abbrev
      </entity>
      application takes the IP address of the host sending the message.
     </p>
    </li>
    <li oldrole="listitem">
     <p oldrole="para">
      If the
      <span class="Code" oldrole="parameter">
       use-dns()
      </span>
      option is enabled,
      <entity>
       abbrev
      </entity>
      attempts to resolve the IP address to a hostname. If it succeeds, the returned hostname will be the value of the
      <span class="Code" oldrole="parameter">
       $FULLHOST_FROM
      </span>
      macro. This value will be the FQDN of the host if the
      <span class="Code" oldrole="parameter">
       use-fqdn()
      </span>
      option is enabled, but only the hostname if
      <span class="Code" oldrole="parameter">
       use-fqdn()
      </span>
      is disabled.
     </p>
    </li>
    <li oldrole="listitem">
     <p oldrole="para">
      If the
      <span class="Code" oldrole="parameter">
       use-dns()
      </span>
      option is disabled, or the address resolution fails, the
      <span class="Code" oldrole="parameter">
       ${FULLHOST_FROM}
      </span>
      macro will return the IP address of the sender host.
     </p>
    </li>
   </ol>
   <MadCap:snippetBlock src="../../shared/chunk/p-name-resolution.htm">
   </MadCap:snippetBlock>
  </simplesect>
  <MadCap:snippetBlock src="../../shared/chunk/macro-hour.htm">
  </MadCap:snippetBlock>
  <simplesect xml:id="macro-hour12">
   <title>
    HOUR12, C_HOUR12, R_HOUR12, S_HOUR12
   </title>
   <indexterm type="parameter">
    <primary>
     HOUR12, C_HOUR12, R_HOUR12, S_HOUR12
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${HOUR12}, ${C_HOUR12}, ${R_HOUR12}, ${S_HOUR12}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The hour of day the message was sent in 12-hour clock format. See also the
    <a href="reference-macros.htm">
     <span class="Code" oldrole="parameter">
      ${AMPM}
     </span>
    </a>
    macro. 12AM is midnight. Available in
    <phrase condition="pe">
     <entity>
      abbrev
     </entity>
     3.2
    </phrase>
    <phrase condition="ose">
     <entity>
      abbrev
     </entity>
     3.4
    </phrase>
    and later.
   </p>
  </simplesect>
  <simplesect xml:id="macro-host">
   <title>
    HOST
   </title>
   <indexterm type="parameter">
    <primary>
     HOST
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${HOST}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The name of the source host where the message originates from.
   </p>
   <ul oldrole="itemizedlist">
    <li oldrole="listitem">
     <p oldrole="para">
      If the message traverses several hosts and the
      <a href="chapter-global-options.htm">
       <span class="Code" oldrole="parameter">
        chain-hostnames()
       </span>
      </a>
      option is on, the first host in the chain is used.
     </p>
    </li>
    <li oldrole="listitem">
     <p oldrole="para">
      If the
      <a href="chapter-global-options.htm">
       <span class="Code" oldrole="parameter">
        keep-hostname()
       </span>
      </a>
      option is disabled (
      <span class="Code" oldrole="userinput">
       keep-hostname(no)
      </span>
      ), the value of the $HOST macro will be the DNS hostname of the host that sent the message to
      <entity>
       abbrev
      </entity>
      (that is, the DNS hostname of the last hop). In this case the $HOST and $HOST_FROM macros will have the same value.
     </p>
    </li>
    <li oldrole="listitem">
     <p oldrole="para">
      If the
      <a href="chapter-global-options.htm">
       <span class="Code" oldrole="parameter">
        keep-hostname()
       </span>
      </a>
      option is enabled (
      <span class="Code" oldrole="userinput">
       keep-hostname(yes)
      </span>
      ), the value of the $HOST macro will be the hostname retrieved from the log message. That way the name of the original sender host can be used, even if there are log relays between the sender and the server.
     </p>
     <table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');">
      <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;">
      </col>
      <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2">
      </col>
      <tbody>
       <tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1">
        <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1">
         <p>
          <img src="../../Resources/Images/Common/note.png"/>
         </p>
        </td>
        <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1">
         <span class="AllNoteStyles">
          NOTE:
         </span>
         <MadCap:snippetBlock src="../../shared/chunk/p-keep-hostname-macro.htm">
         </MadCap:snippetBlock>
        </td>
       </tr>
      </tbody>
     </table>
    </li>
   </ul>
   <MadCap:snippetBlock src="../../shared/chunk/p-name-resolution.htm">
   </MadCap:snippetBlock>
  </simplesect>
  <simplesect xml:id="macro-host-from">
   <title>
    HOST_FROM
   </title>
   <indexterm type="parameter">
    <primary>
     HOST_FROM
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${HOST_FROM}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The FQDN of the host that sent the message to syslog-ng as resolved by syslog-ng using DNS. If the message traverses several hosts, this is the last host in the chain.
   </p>
   <p oldrole="para">
    The
    <entity>
     abbrev
    </entity>
    application uses the following procedure to determine the value of the
    <span class="Code" oldrole="parameter">
     $HOST_FROM
    </span>
    macro:
   </p>
   <ol oldrole="orderedlist">
    <li oldrole="listitem">
     <p oldrole="para">
      The
      <entity>
       abbrev
      </entity>
      application takes the IP address of the host sending the message.
     </p>
    </li>
    <li oldrole="listitem">
     <p oldrole="para">
      If the
      <span class="Code" oldrole="parameter">
       use-dns()
      </span>
      option is enabled,
      <entity>
       abbrev
      </entity>
      attempts to resolve the IP address to a hostname. If it succeeds, the returned hostname will be the value of the
      <span class="Code" oldrole="parameter">
       $HOST_FROM
      </span>
      macro. This value will be the FQDN of the host if the
      <span class="Code" oldrole="parameter">
       use-fqdn()
      </span>
      option is enabled, but only the hostname if
      <span class="Code" oldrole="parameter">
       use-fqdn()
      </span>
      is disabled.
     </p>
    </li>
    <li oldrole="listitem">
     <p oldrole="para">
      If the
      <span class="Code" oldrole="parameter">
       use-dns()
      </span>
      option is disabled, or the address resolution fails, the
      <span class="Code" oldrole="parameter">
       ${HOST_FROM}
      </span>
      macro will return the IP address of the sender host.
     </p>
    </li>
   </ol>
   <MadCap:snippetBlock src="../../shared/chunk/p-name-resolution.htm">
   </MadCap:snippetBlock>
  </simplesect>
  <simplesect xml:id="macro-isodate">
   <title>
    ISODATE, C_ISODATE, R_ISODATE, S_ISODATE
   </title>
   <indexterm type="parameter">
    <primary>
     ISODATE, C_ISODATE, R_ISODATE, S_ISODATE
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${ISODATE}, ${C_ISODATE}, ${R_ISODATE}, ${S_ISODATE}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    Date of the message in the ISO 8601 compatible standard timestamp format (yyyy-mm-ddThh:mm:ss+-ZONE), for example:
    <span class="Code" oldrole="userinput">
     2006-06-13T15:58:00.123+01:00
    </span>
    . If possible, it is recommended to use
    <span class="Code" oldrole="parameter">
     ${ISODATE}
    </span>
    for timestamping. Note that syslog-ng can produce fractions of a second (for example milliseconds) in the timestamp by using the
    <span class="Code" oldrole="parameter">
     frac-digits()
    </span>
    global or per-destination option.
   </p>
  </simplesect>
  <simplesect xml:id="macro-level-num">
   <title>
    LEVEL_NUM
   </title>
   <indexterm type="parameter">
    <primary>
     LEVEL_NUM
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${LEVEL_NUM}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The priority (also called severity) of the message, represented as a numeric value, for example,
    <span class="Code" oldrole="userinput">
     3
    </span>
    . For the textual representation of this value, use the
    <span class="Code" oldrole="parameter">
     ${LEVEL}
    </span>
    macro. See
    <xref linkend="macro-priority">
    </xref>
    for details.
   </p>
  </simplesect>
  <simplesect condition="ose" xml:id="macro-loghost">
   <title>
    LOGHOST
   </title>
   <indexterm type="parameter">
    <primary>
     LOGHOST
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     $LOGHOST
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The hostname of the computer running
    <entity>
     abbrev
    </entity>
    <entity>
     mdash
    </entity>
    it returns the same result as the
    <b oldrole="command">
     hostname
    </b>
    command.
   </p>
  </simplesect>
  <simplesect xml:id="macro-message">
   <title>
    MESSAGE
   </title>
   <indexterm type="parameter">
    <primary>
     MESSAGE
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${MESSAGE}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    Text contents of the log message without the program name and pid. The program name and the pid together are available in the
    <a href="../../shared/chunk/macro-msghdr.htm">
     <span class="Code" oldrole="parameter">
      ${MSGHDR}
     </span>
    </a>
    macro, and separately in the
    <a href="reference-macros.htm">
     ${PROGRAM}
    </a>
    and
    <a href="reference-macros.htm">
     ${PID}
    </a>
    macros.
   </p>
   <MadCap:snippetBlock src="../../shared/chunk/para-flags-no-parse.htm">
   </MadCap:snippetBlock>
   <p oldrole="para">
    The ${MSG} macro is an alias of the ${MESSAGE} macro: using ${MSG} in
    <entity>
     abbrev
    </entity>
    is equivalent to ${MESSAGE}.
   </p>
   <p oldrole="para">
    Note that before syslog-ng version 3.0, the ${MESSAGE} macro included the program name and the pid. In syslog-ng 3.0, the
    <span class="Code" oldrole="parameter">
     ${MESSAGE}
    </span>
    macro became equivalent with the
    <span class="Code" oldrole="parameter">
     ${MSGONLY}
    </span>
    macro.
   </p>
  </simplesect>
  <MadCap:snippetBlock src="../../shared/chunk/macro-min.htm">
  </MadCap:snippetBlock>
  <MadCap:snippetBlock src="../../shared/chunk/macro-month.htm">
  </MadCap:snippetBlock>
  <simplesect xml:id="macro-month-abbrev">
   <title>
    MONTH_ABBREV, C_MONTH_ABBREV, R_MONTH_ABBREV, S_MONTH_ABBREV
   </title>
   <indexterm type="parameter">
    <primary>
     MONTH_ABBREV, C_MONTH_ABBREV, R_MONTH_ABBREV, S_MONTH_ABBREV
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${MONTH_ABBREV}, ${C_MONTH_ABBREV}, ${R_MONTH_ABBREV}, ${S_MONTH_ABBREV}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The English abbreviation of the month name (3 letters).
   </p>
  </simplesect>
  <simplesect xml:id="macro-month-name">
   <title>
    MONTH_NAME, C_MONTH_NAME, R_MONTH_NAME, S_MONTH_NAME
   </title>
   <indexterm type="parameter">
    <primary>
     MONTH_NAME, C_MONTH_NAME, R_MONTH_NAME, S_MONTH_NAME
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${MONTH_NAME}, ${C_MONTH_NAME}, ${R_MONTH_NAME}, ${S_MONTH_NAME}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The English name of the month name.
   </p>
  </simplesect>
  <simplesect xml:id="macro-month-week">
   <title>
    MONTH_WEEK, C_MONTH_WEEK, R_MONTH_WEEK, S_MONTH_WEEK
   </title>
   <indexterm type="parameter">
    <primary>
     MONTH_WEEK, R_MONTH_WEEK, R_MONTH_WEEK, S_MONTH_WEEK
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${MONTH_WEEK}, ${C_MONTH_WEEK}, ${R_MONTH_WEEK}, ${S_MONTH_WEEK}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The number of the week in the given month (0-5). The week with numerical value 1 is the first week containing a Monday. The days of month before the first Monday are considered week 0. For example, if a 31-day month begins on a Sunday, then the 1st of the month is week 0, and the end of the month (the 30th and 31st) is week 5.
   </p>
  </simplesect>
  <simplesect xml:id="macro-msec">
   <title>
    MSEC, C_MSEC, R_MSEC, S_MSEC
   </title>
   <indexterm type="parameter">
    <primary>
     MSEC, C_MSEC, R_MSEC, S_MSEC
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${MSEC}, ${C_MSEC}, ${R_MSEC}, ${S_MSEC}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The millisecond the message was sent.
   </p>
   <p oldrole="para">
    Available in
    <entity>
     abbrev
    </entity>
    version
    <phrase condition="pe">
     4 F2
    </phrase>
    <phrase condition="ose">
     3.4
    </phrase>
    and later.
   </p>
  </simplesect>
  <simplesect xml:id="macro-msg">
   <title>
    MSG
   </title>
   <indexterm type="parameter">
    <primary>
     MSG
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${MSG}
    </primary>
   </indexterm>
   <p oldrole="para">
    The ${MSG} macro is an alias of the ${MESSAGE} macro, using ${MSG} in
    <entity>
     abbrev
    </entity>
    is equivalent to ${MESSAGE}. For details on this macro, see
    <xref linkend="macro-message">
    </xref>
    .
   </p>
  </simplesect>
  <MadCap:snippetBlock src="../../shared/chunk/macro-msghdr.htm">
  </MadCap:snippetBlock>
  <simplesect xml:id="macro-msgid">
   <title>
    MSGID
   </title>
   <indexterm type="parameter">
    <primary>
     MSGID
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${MSGID}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    A string specifying the type of the message in IETF-syslog (RFC5424-formatted) messages. For example, a firewall might use the ${MSGID} "TCPIN" for incoming TCP traffic and the ${MSGID} "TCPOUT" for outgoing TCP traffic. By default,
    <entity>
     abbrev
    </entity>
    does not specify this value, but uses a dash (-) character instead. If an incoming message includes the ${MSGID} value, it is retained and relayed without modification.
   </p>
  </simplesect>
  <simplesect xml:id="macro-msgonly">
   <title>
    MSGONLY
   </title>
   <indexterm type="parameter">
    <primary>
     MSGONLY
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${MSGONLY}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    Message contents without the program name or pid. Starting with
    <entity>
     abbrev
    </entity>
    3.0, the following macros are equivalent: ${MSGONLY}, ${MSG}, ${MESSAGE}. For consistency, use the ${MESSAGE} macro. For details, see
    <xref linkend="macro-message">
    </xref>
    .
   </p>
  </simplesect>
  <simplesect xml:id="macro-pid">
   <title>
    PID
   </title>
   <indexterm type="parameter">
    <primary>
     PID
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${PID}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The PID of the program sending the message.
   </p>
  </simplesect>
  <simplesect xml:id="macro-pri">
   <title>
    PRI
   </title>
   <indexterm type="parameter">
    <primary>
     PRI
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${PRI}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The priority and facility encoded as a 2 or 3 digit decimal number as it is present in syslog messages.
   </p>
  </simplesect>
  <simplesect xml:id="macro-priority">
   <title>
    PRIORITY or LEVEL
   </title>
   <indexterm type="parameter">
    <primary>
     PRIORITY
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     LEVEL
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${PRIORITY}
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${LEVEL}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The priority (also called severity) of the message, for example,
    <span class="Code" oldrole="parameter">
     error
    </span>
    . For the textual representation of this value, use the
    <span class="Code" oldrole="parameter">
     ${LEVEL}
    </span>
    macro. See
    <xref linkend="macro-priority">
    </xref>
    for details.
   </p>
  </simplesect>
  <simplesect xml:id="macro-program">
   <title>
    PROGRAM
   </title>
   <indexterm type="parameter">
    <primary>
     PROGRAM
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${PROGRAM}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The name of the program sending the message. Note that the content of the ${PROGRAM} variable may not be completely trusted as it is provided by the client program that constructed the message.
   </p>
  </simplesect>
  <simplesect xml:id="macro-rcptid">
   <title>
    RCPTID
   </title>
   <indexterm type="parameter">
    <primary>
     RCPTID
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${RCPTID}
    </primary>
   </indexterm>
   <MadCap:snippetBlock src="../../shared/chunk/option-description-use-rcptid.htm">
   </MadCap:snippetBlock>
  </simplesect>
  <simplesect xml:id="macro-runid">
   <title>
    RUNID
   </title>
   <indexterm type="parameter">
    <primary>
     RUNID
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${RUNID}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    An ID that changes its value every time
    <entity>
     abbrev
    </entity>
    is restarted, but not when reloaded.
   </p>
  </simplesect>
  <simplesect xml:id="macro-sdata">
   <title>
    SDATA, .SDATA.SDID.SDNAME
   </title>
   <indexterm type="parameter">
    <primary>
     .SDATA.SDID.SDNAME
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     SDATA
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${.SDATA.SDID.SDNAME}
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${SDATA}
    </primary>
   </indexterm>
   <indexterm>
    <primary>
     STRUCTURED-DATA
    </primary>
   </indexterm>
   <indexterm>
    <primary>
     macros
    </primary>
    <secondary>
     SDATA
    </secondary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The syslog-ng application automatically parses the STRUCTURED-DATA part of IETF-syslog messages, which can be referenced in macros. The
    <span class="Code" oldrole="parameter">
     ${SDATA}
    </span>
    macro references the entire STRUCTURED-DATA part of the message, while structured data elements can be referenced using the
    <span class="Code" oldrole="parameter">
     ${.SDATA.SDID.SDNAME}
    </span>
    macro.
    <phrase condition="pe">
     Available only in
     <entity>
      product
     </entity>
     4.0 and later.
    </phrase>
   </p>
   <table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');">
    <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;">
    </col>
    <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2">
    </col>
    <tbody>
     <tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1">
      <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1">
       <p>
        <img src="../../Resources/Images/Common/note.png"/>
       </p>
      </td>
      <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1">
       <span class="AllNoteStyles">
        NOTE:
       </span>
       <p oldrole="para">
        When using STRUCTURED-DATA macros, consider the following:
       </p>
       <ul oldrole="itemizedlist">
        <li oldrole="listitem">
         <p oldrole="para">
          When referencing an element of the structured data, the macro must begin with the dot (.) character. For example,
          <span class="Code" oldrole="userinput">
           ${.SDATA.timeQuality.isSynced}
          </span>
          .
         </p>
        </li>
        <li oldrole="listitem">
         <p oldrole="para">
          The SDID and SDNAME parts of the macro names are case sensitive:
          <span class="Code" oldrole="userinput">
           ${.SDATA.timeQuality.isSynced}
          </span>
          is not the same as
          <span class="Code" oldrole="userinput">
           ${.SDATA.TIMEQUALITY.ISSYNCED}
          </span>
          .
         </p>
        </li>
       </ul>
      </td>
     </tr>
    </tbody>
   </table>
   <example>
    <title>
     Using SDATA macros
    </title>
    <p oldrole="para">
     For example, if a log message contains the following structured data:
     <span class="Code" oldrole="userinput">
      [exampleSDID@0 iut="3" eventSource="Application" eventID="1011"][examplePriority@0 class="high"]
     </span>
     you can use macros like:
     <span class="Code" oldrole="userinput">
      ${.SDATA.exampleSDID@0.eventSource}
     </span>
     <entity>
      mdash
     </entity>
     this would return the
     <span class="Code" oldrole="userinput">
      Application
     </span>
     string in this case.
    </p>
   </example>
  </simplesect>
  <MadCap:snippetBlock src="../../shared/chunk/macro-sec.htm">
  </MadCap:snippetBlock>
  <simplesect xml:id="macro-seqnum">
   <title>
    SEQNUM
   </title>
   <indexterm type="parameter">
    <primary>
     SEQNUM
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${SEQNUM}
    </primary>
   </indexterm>
   <indexterm>
    <primary>
     sequence ID
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The
    <span class="Code" oldrole="parameter">
     ${SEQNUM}
    </span>
    macro contains a sequence number for the log message. The value of the macro depends on the scenario, and can be one of the following:
   </p>
   <ul oldrole="itemizedlist">
    <li oldrole="listitem">
     <p oldrole="para">
      If
      <entity>
       abbrev
      </entity>
      receives a message via the IETF-syslog protocol that includes a sequence ID, this ID is automatically available in the
      <span class="Code" oldrole="parameter">
       ${SEQNUM}
      </span>
      macro.
     </p>
    </li>
    <li oldrole="listitem">
     <indexterm>
      <primary>
       Cisco timestamp
      </primary>
     </indexterm>
     <indexterm>
      <primary>
       Cisco sequence number
      </primary>
     </indexterm>
     <indexterm>
      <primary>
       sequence number
      </primary>
     </indexterm>
     <indexterm>
      <primary>
       sequence number
      </primary>
      <secondary>
       Cisco
      </secondary>
     </indexterm>
     <indexterm>
      <primary>
       message
      </primary>
      <secondary>
       ID
      </secondary>
     </indexterm>
     <indexterm>
      <primary>
       extended timestamp format
      </primary>
     </indexterm>
     <p oldrole="para">
      If the message is a Cisco IOS log message using the extended timestamp format, then
      <entity>
       abbrev
      </entity>
      stores the sequence number from the message in this macro. If you forward this message the IETF-syslog protocol,
      <entity>
       abbrev
      </entity>
      includes the sequence number received from the Cisco device in the
      <span class="Code" oldrole="userinput">
       ${.SDATA.meta.sequenceId}
      </span>
      part of the message.
     </p>
     <table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');">
      <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;">
      </col>
      <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2">
      </col>
      <tbody>
       <tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1">
        <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1">
         <p>
          <img src="../../Resources/Images/Common/note.png"/>
         </p>
        </td>
        <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1">
         <span class="AllNoteStyles">
          NOTE:
         </span>
         <p oldrole="para">
          To enable sequence numbering of log messages on Cisco devices, use the following command on the device (available in IOS 10.0 and later):
          <b oldrole="command">
           service sequence-numbers
          </b>
          . For details, see the manual of your Cisco device.
         </p>
        </td>
       </tr>
      </tbody>
     </table>
    </li>
    <li oldrole="listitem">
     <p oldrole="para">
      For locally generated messages (that is, for messages that are received from a local source, and not from the network),
      <entity>
       abbrev
      </entity>
      calculates a sequence number when sending the message to a destination (it is not calculated for relayed messages).
     </p>
     <ul oldrole="itemizedlist">
      <li oldrole="listitem">
       <p oldrole="para">
        The sequence number is not global, but per-destination. Essentially, it counts the number of messages sent to the destination.
       </p>
      </li>
      <li oldrole="listitem">
       <p oldrole="para">
        This sequence number increases by one for every message sent to the destination. It not lost when
        <entity>
         abbrev
        </entity>
        is reloaded, but it is reset when
        <entity>
         abbrev
        </entity>
        is restarted.
       </p>
      </li>
      <li oldrole="listitem">
       <p oldrole="para">
        This sequence number is added to every message that uses the IETF-syslog protocol (
        <span class="Code" oldrole="userinput">
         ${.SDATA.meta.sequenceId}
        </span>
        ), and can be added to BSD-syslog messages using the
        <span class="Code" oldrole="parameter">
         ${SEQNUM}
        </span>
        macro.
       </p>
      </li>
     </ul>
    </li>
   </ul>
   <table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');">
    <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;">
    </col>
    <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2">
    </col>
    <tbody>
     <tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1">
      <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1">
       <p>
        <img src="../../Resources/Images/Common/note.png"/>
       </p>
      </td>
      <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1">
       <span class="AllNoteStyles">
        NOTE:
       </span>
       <p oldrole="para">
        If you need a sequence number for every log message that
        <entity>
         abbrev
        </entity>
        receives, use the
        <a href="reference-macros.htm">
         RCPTID
        </a>
        macro.
       </p>
      </td>
     </tr>
    </tbody>
   </table>
  </simplesect>
  <simplesect xml:id="macro-source">
   <title>
    SOURCE
   </title>
   <indexterm type="parameter">
    <primary>
     SOURCE
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${SOURCE}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The identifier of the source statement in the
    <entity>
     abbrev
    </entity>
    configuration file that received the message. For example, if
    <entity>
     abbrev
    </entity>
    received the log message from the
    <span class="Code" oldrole="userinput">
     source s_local { internal(); };
    </span>
    source statement, the value of the ${SOURCE} macro is
    <span class="Code" oldrole="userinput">
     s_local
    </span>
    . This macro is mainly useful for debugging and troubleshooting purposes.
   </p>
  </simplesect>
  <simplesect xml:id="macro-sourceip">
   <title>
    SOURCEIP
   </title>
   <indexterm type="parameter">
    <primary>
     SOURCEIP
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${SOURCEIP}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    IP address of the host that sent the message to syslog-ng. (That is, the IP address of the host in the
    <span class="Code" oldrole="parameter">
     ${FULLHOST_FROM}
    </span>
    macro.) Please note that when a message traverses several relays, this macro contains the IP of the last relay.
   </p>
  </simplesect>
  <simplesect xml:id="macro-stamp">
   <title>
    STAMP, R_STAMP, S_STAMP
   </title>
   <indexterm type="parameter">
    <primary>
     STAMP, C_STAMP, R_STAMP, S_STAMP
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${STAMP}, ${C_STAMP}, ${R_STAMP}, ${S_STAMP}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    A timestamp formatted according to the
    <a href="chapter-global-options.htm">
     <span class="Code" oldrole="parameter">
      ts-format()
     </span>
    </a>
    global or per-destination option.
   </p>
  </simplesect>
  <simplesect xml:id="macro-sysuptime">
   <title>
    SYSUPTIME
   </title>
   <indexterm type="parameter">
    <primary>
     SYSUPTIME
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${SYSUPTIME}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The time elapsed since the
    <entity>
     abbrev
    </entity>
    instance was started (that is, the uptime of the
    <entity>
     abbrev
    </entity>
    process). The value of this macro is an integer containing the time in 1/100th of the second.
   </p>
   <p oldrole="para">
    Available in
    <entity>
     abbrev
    </entity>
    version
    <phrase condition="pe">
     4 F1
    </phrase>
    <phrase condition="ose">
     3.4
    </phrase>
    and later.
   </p>
  </simplesect>
  <simplesect xml:id="macro-tag">
   <title>
    TAG
   </title>
   <indexterm type="parameter">
    <primary>
     TAG
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${TAG}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The priority and facility encoded as a 2 digit hexadecimal number.
   </p>
  </simplesect>
  <simplesect xml:id="macro-tags">
   <title>
    TAGS
   </title>
   <indexterm type="parameter">
    <primary>
     TAGS
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${TAGS}
    </primary>
   </indexterm>
   <indexterm>
    <primary>
     macros
    </primary>
    <secondary>
     patterndb tags
    </secondary>
   </indexterm>
   <indexterm>
    <primary>
     tags
    </primary>
    <secondary>
     as macro
    </secondary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    A comma-separated list of the tags assigned to the message.
    <phrase condition="pe">
     Available only in
     <entity>
      product
     </entity>
     3.2 and later.
    </phrase>
   </p>
   <table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');">
    <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;">
    </col>
    <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2">
    </col>
    <tbody>
     <tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1">
      <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1">
       <p>
        <img src="../../Resources/Images/Common/note.png"/>
       </p>
      </td>
      <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1">
       <span class="AllNoteStyles">
        NOTE:
       </span>
       <p oldrole="para">
        Note that the tags are not part of the log message and are not automatically transferred from a client to the server. For example, if a client uses a pattern database to tag the messages, the tags are not transferred to the server. A way of transferring the tags is to explicitly add them to the log messages using a template and the
        <span class="Code" oldrole="parameter">
         ${TAGS}
        </span>
        macro, or to add them to the structured metadata part of messages when using the IETF-syslog message format.
       </p>
       <p oldrole="para">
        When sent as structured metadata, it is possible to reference to the list of tags on the central server, and for example, to add them to a database column.
       </p>
      </td>
     </tr>
    </tbody>
   </table>
  </simplesect>
  <MadCap:snippetBlock src="../../shared/chunk/macro-tz.htm">
  </MadCap:snippetBlock>
  <MadCap:snippetBlock src="../../shared/chunk/macro-tzoffset.htm">
  </MadCap:snippetBlock>
  <MadCap:snippetBlock src="../../shared/chunk/macro-unixtime.htm">
  </MadCap:snippetBlock>
  <simplesect xml:id="macro-tls-x509">
   <title>
    .TLS.X509
   </title>
   <indexterm type="parameter">
    <primary>
     .TLS.X509_CN
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${.TLS.X509_CN}
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     .TLS.X509_O
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${.TLS.X509_O}
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     .TLS.X509_OU
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${.TLS.X509_OU}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    When using a transport that uses TLS, these macros contain information about the peer's certificate. That way, you can use information from the client certificate in filenames, database values, or as other metadata. If you clients have their own certificates, then these values are unique per client, but unchangeable by the client. The following macros are available in
    <entity>
     abbrev
    </entity>
    version
    <phrase condition="pe">
     7
    </phrase>
    <phrase condition="ose">
     3.9
    </phrase>
    and later.
   </p>
   <ul oldrole="itemizedlist">
    <li oldrole="listitem">
     <p oldrole="para">
      <span class="Code" oldrole="parameter">
       .TLS.X509_CN
      </span>
      : The Common Name of the certificate.
     </p>
    </li>
    <li oldrole="listitem">
     <p oldrole="para">
      <span class="Code" oldrole="parameter">
       .TLS.X509_O
      </span>
      : The value of the Organization field.
     </p>
    </li>
    <li oldrole="listitem">
     <p oldrole="para">
      <span class="Code" oldrole="parameter">
       .TLS.X509_OU
      </span>
      : The value of the Organization Unit field.
     </p>
    </li>
   </ul>
  </simplesect>
  <simplesect xml:id="macro-uniqid">
   <title>
    UNIQID
   </title>
   <indexterm type="parameter">
    <primary>
     UNIQID
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${UNIQID}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    A globally unique ID generated from the HOSTID and the RCPTID in the format of HOSTID@RCPTID. For details, see
    <xref linkend="global-use-uniqid">
    </xref>
    and
    <xref linkend="macro-rcptid">
    </xref>
    .
   </p>
   <p oldrole="para">
    Available in
    <entity>
     abbrev
    </entity>
    version
    <phrase condition="pe">
     5 F2
    </phrase>
    <phrase condition="ose">
     3.7
    </phrase>
    and later.
   </p>
  </simplesect>
  <simplesect xml:id="macro-usec">
   <title>
    USEC, C_USEC, R_USEC, S_USEC
   </title>
   <indexterm type="parameter">
    <primary>
     USEC, C_USEC, R_USEC, S_USEC
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${USEC}, ${C_USEC}, ${R_USEC}, ${S_USEC}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The microsecond the message was sent.
   </p>
   <p oldrole="para">
    Available in
    <entity>
     abbrev
    </entity>
    version
    <phrase condition="pe">
     4 F2
    </phrase>
    <phrase condition="ose">
     3.4
    </phrase>
    and later.
   </p>
  </simplesect>
  <MadCap:snippetBlock src="../../shared/chunk/macro-year.htm">
  </MadCap:snippetBlock>
  <MadCap:snippetBlock src="../../shared/chunk/macro-week.htm">
  </MadCap:snippetBlock>
  <simplesect xml:id="macro-week-day-abbrev">
   <title>
    WEEK_DAY_ABBREV, C_WEEK_DAY_ABBREV, R_WEEK_DAY_ABBREV, S_WEEK_DAY_ABBREV
   </title>
   <indexterm type="parameter">
    <primary>
     WEEK_DAY_ABBREV, C_WEEK_DAY_ABBREV, R_WEEK_DAY_ABBREV, S_WEEK_DAY_ABBREV
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${WEEK_DAY_ABBREV}, ${C_WEEK_DAY_ABBREV}, ${R_WEEK_DAY_ABBREV}, ${S_WEEK_DAY_ABBREV}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The 3-letter English abbreviation of the name of the day the message was sent, for example
    <span class="Code" oldrole="parameter">
     Thu
    </span>
    .
   </p>
  </simplesect>
  <simplesect xml:id="macro-week-day">
   <title>
    WEEK_DAY, C_WEEK_DAY, R_WEEK_DAY, S_WEEK_DAY
   </title>
   <indexterm type="parameter">
    <primary>
     WEEK_DAY, C_WEEK_DAY, R_WEEK_DAY, S_WEEK_DAY
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${WEEK_DAY}, ${C_WEEK_DAY}, ${R_WEEK_DAY}, ${S_WEEK_DAY}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The day of the week as a numerical value (1-7).
   </p>
  </simplesect>
  <simplesect xml:id="macro-weekday">
   <title>
    WEEKDAY, C_WEEKDAY, R_WEEKDAY, S_WEEKDAY
   </title>
   <indexterm type="parameter">
    <primary>
     WEEKDAY, C_WEEKDAY, R_WEEKDAY, S_WEEKDAY
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${WEEKDAY}, ${C_WEEKDAY}, ${R_WEEKDAY}, ${S_WEEKDAY}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    These macros are deprecated, use
    <a href="reference-macros.htm">
     ${WEEK_DAY_ABBREV}, ${R_WEEK_DAY_ABBREV}, ${S_WEEK_DAY_ABBREV}
    </a>
    instead. The 3-letter name of the day of week the message was sent, for example
    <span class="Code" oldrole="userinput">
     Thu
    </span>
    .
   </p>
  </simplesect>
  <simplesect xml:id="macro-week-day-name">
   <title>
    WEEK_DAY_NAME, C_WEEK_DAY_NAME, R_WEEK_DAY_NAME, S_WEEK_DAY_NAME
   </title>
   <indexterm type="parameter">
    <primary>
     WEEK_DAY_NAME, C_WEEK_DAY_NAME, R_WEEK_DAY_NAME, S_WEEK_DAY_NAME
    </primary>
   </indexterm>
   <indexterm type="parameter">
    <primary>
     ${WEEK_DAY_NAME}, ${C_WEEK_DAY_NAME}, ${R_WEEK_DAY_NAME}, ${S_WEEK_DAY_NAME}
    </primary>
   </indexterm>
   <p oldrole="para">
    <i oldrole="emphasis" role="bold">
     Description:
    </i>
    The English name of the day.
   </p>
  </simplesect>
 </body>
</html>
