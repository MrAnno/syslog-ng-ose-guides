<?xml version="1.0" encoding="UTF-8"?>

<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><body name="chapter-encrypted-transport-tls" oldrole="chapter">
<h1 name="chapter-encrypted-transport-tls" version="5.0" xmlns="http://docbook.org/ns/docbook">TLS-encrypted message transfer</h1>
<!-- FIXME jumplist -->
<h2 name="concepts-tls">Secure logging using TLS</h2>
<MadCap:keyword term="TLS"></MadCap:keyword>
<MadCap:keyword term="transport layer security:['TLS']"></MadCap:keyword>
<MadCap:keyword term="encrypting log messages"></MadCap:keyword>
<MadCap:keyword term="authentication"></MadCap:keyword>
<p oldrole="para">The syslog-ng application can send and receive log messages securely over the network using the Transport Layer Security (TLS) protocol using the <span class="Code" oldrole="parameter">network()</span> and <span class="Code" oldrole="parameter">syslog()</span> drivers.</p>
<table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');"><col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;"></col><col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2"></col><tbody><tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1"><td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1"><p><img src="../../Resources/Images/Common/note.png"/></p></td><td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1"><span class="AllNoteStyles">NOTE: </span><p oldrole="para">This chapter describes how to use TLS encryption when using the standard syslog protocols, that is, the <span class="Code" oldrole="parameter">network()</span> and <span class="Code" oldrole="parameter">syslog()</span> drivers, for example, to forward log messages between two syslog-ng nodes, or to send log data to <MadCap:variable name="General.ssb"></MadCap:variable> or another log server. Other destinations that support TLS-encryption are not discussed in this chapter (for example, <a href="destination-http-nonjava.htm"><span class="Code" oldrole="parameter">http()</span></a>).</p></td></tr></tbody></table>
<p oldrole="para">TLS uses certificates to authenticate and encrypt the communication, as illustrated on the following figure:</p>
<p class="CaptionFigure">Certificate-based authentication</p>
<img class="Image" fileref="&lt;entity&gt;imgroot&lt;/entity&gt;/certificate-based_authentication01.png" format="PNG" MadCap:mediastyle="@media print { width: auto; height: auto; }" oldrole="figure" src="certificate-based_authentication01.png" style="height: auto; width: auto;"/>
<MadCap:keyword term="certificates"></MadCap:keyword>
<p oldrole="para">The client authenticates the server by requesting its certificate and public key. Optionally, the server can also request a certificate from the client, thus mutual authentication is also possible.</p>
<p oldrole="para">In order to use TLS encryption in syslog-ng, the following elements are required:</p>
<ul oldrole="itemizedlist">
<li oldrole="listitem">
<p oldrole="para">A certificate on the syslog-ng server that identifies the syslog-ng server.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">The certificate of the Certificate Authority that issued the certificate of the syslog-ng server (or the self-signed certificate of the syslog-ng server) must be available on the syslog-ng client.</p>
</li>
</ul>
<p oldrole="para">When using mutual authentication to verify the identity of the clients, the following elements are required:</p>
<MadCap:keyword term="authentication"></MadCap:keyword>
<MadCap:keyword term="mutual authentication"></MadCap:keyword>
<ul oldrole="itemizedlist">
<li oldrole="listitem">
<p oldrole="para">A certificate must be available on the syslog-ng client. This certificate identifies the syslog-ng client.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">The certificate of the Certificate Authority that issued the certificate of the syslog-ng client must be available on the syslog-ng server.</p>
</li>
</ul>
<p oldrole="para">Mutual authentication ensures that the syslog-ng server accepts log messages only from authorized clients.</p>
<p oldrole="para">For more information about configuring TLS communication in syslog-ng, see <MadCap:xref href="chapter-encrypted-transport-tls.htm#tls-serverauth"></MadCap:xref>.</p>
<p oldrole="para">For more information about TLS-related error messages, see <a href="https://support.oneidentity.com/technical-documents/one-identity-psm/syslog-ng-ose-guide-admin/error-messages" oldrole="olink"></a>.</p>
<h2 name="tls-serverauth">Encrypting log messages with TLS</h2>
<MadCap:keyword term="TLS:['configuring']"></MadCap:keyword>
<MadCap:keyword term="authentication"></MadCap:keyword>
<MadCap:keyword term="encrypting log messages"></MadCap:keyword>
<p oldrole="para">This section describes how to configure TLS encryption in syslog-ng. For the concepts of using TLS in syslog-ng, see <MadCap:xref href="chapter-encrypted-transport-tls.htm#concepts-tls"></MadCap:xref>.</p>
<!-- FIXME add a sample scenario for commonname/altname -->
<MadCap:snippetBlock src="procedure-configuring-tls-client.htm"></MadCap:snippetBlock>
<MadCap:snippetBlock src="procedure-configuring-tls-server.htm"></MadCap:snippetBlock>
<h2 name="tls-mutualauth">Mutual authentication using TLS</h2>
<MadCap:keyword term="TLS:['configuring']"></MadCap:keyword>
<MadCap:keyword term="mutual authentication"></MadCap:keyword>
<p oldrole="para">This section describes how to configure mutual authentication between the syslog-ng server and the client. Configuring mutual authentication is similar to configuring TLS (for details, see <MadCap:xref href="chapter-encrypted-transport-tls.htm#tls-serverauth"></MadCap:xref>), but the server verifies the identity of the client as well. Therefore, each client must have a certificate, and the server must have the certificate of the CA that issued the certificate of the clients. For the concepts of using TLS in syslog-ng, see <MadCap:xref href="chapter-encrypted-transport-tls.htm#concepts-tls"></MadCap:xref>.</p>
<MadCap:snippetBlock src="procedure-configuring-mutual-tls-client.htm"></MadCap:snippetBlock>
<MadCap:snippetBlock src="procedure-configuring-mutual-tls-server.htm"></MadCap:snippetBlock>
<h2 name="tls-password-protected-keys">Password-protected keys</h2>
<p oldrole="para">Starting with <MadCap:variable name="General.abbrev"></MadCap:variable> version <MadCap:conditionaltext MadCap:conditions="ose">3.14</MadCap:conditionaltext><MadCap:conditionaltext MadCap:conditions="pe">7.0.7</MadCap:conditionaltext>, you can use password-protected private keys in the <span class="Code" oldrole="parameter">network()</span> and <span class="Code" oldrole="parameter">syslog()</span> source and destination drivers.</p>

<h6 oldrole="simplesect">Restrictions and limitations:</h6>
<ul oldrole="itemizedlist">
<li oldrole="listitem">
<p oldrole="para"><i oldrole="emphasis" role="bold">Hazard of data loss!</i> If you use password-protected keys, you must provide the passphrase of the password-protected keys every time <MadCap:variable name="General.abbrev"></MadCap:variable> is restarted (<MadCap:variable name="General.abbrev"></MadCap:variable> keeps the passphrases over reloads). The sources and destinations that use these keys will not work until you provide the passwords. Other parts of the <MadCap:variable name="General.abbrev"></MadCap:variable> configuration will be unaffected.</p>
<p oldrole="para">This means that if you use a password-protected key in a destination, and you use this destination in a log path that has multiple destinations, neither destinations will receive log messages until you provide the password. In such cases, always <a href="chapter-routing-filters.htm">use disk-based buffering to avoid data loss</a>.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">The path and the filename of the private key cannot contain whitespaces.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">Depending on your platform, the number of passwords <MadCap:variable name="General.abbrev"></MadCap:variable> can use at the same time might be limited (for example, on Ubuntu 16.04 you can store 16 passwords if you are running <MadCap:variable name="General.abbrev"></MadCap:variable> as a non-root user). If you use lots of password-protected private keys in your <MadCap:variable name="General.abbrev"></MadCap:variable> configuration, increase this limit using the following command: <b oldrole="command">sudo ulimit -l unlimited</b></p>
</li>
</ul>


<h6 oldrole="simplesect">Providing the passwords</h6>
<MadCap:snippetBlock src="../../shared/chunk/syslog-ng-ctl-credentials-status-description.htm"></MadCap:snippetBlock>
<MadCap:snippetBlock src="../../shared/chunk/syslog-ng-ctl-credentials-add-description.htm"></MadCap:snippetBlock>
<p oldrole="para">For details on the <b oldrole="command">syslog-ng-ctl credentials</b> command, see <MadCap:xref href="#syslog-ng-ctl-credentials"></MadCap:xref>.</p>

<h2 name="tlsoptions">TLS options</h2>
<MadCap:keyword term="TLS:['reference']"></MadCap:keyword>
<p oldrole="para">The syslog-ng application can encrypt incoming and outgoing syslog message flows using TLS if you use the <span class="Code" oldrole="parameter">network()</span> or <span class="Code" oldrole="parameter">syslog()</span> drivers.</p>
<table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');"><col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;"></col><col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2"></col><tbody><tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1"><td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1"><p><img src="../../Resources/Images/Common/note.png"/></p></td><td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1"><span class="AllNoteStyles">NOTE: </span><p oldrole="para">The format of the TLS connections used by syslog-ng is similar to using syslog-ng and stunnel, but the source IP information is not lost.</p></td></tr></tbody></table>
<p oldrole="para">To encrypt connections, use the <span class="Code" oldrole="parameter">transport("tls")</span> and <span class="Code" oldrole="parameter">tls()</span> options in the source and destination statements.</p>
<p oldrole="para">The tls() option can include the following settings:</p>

<MadCap:snippetBlock src="../../shared/chunk/option-destination-tls-ca-dir.htm"></MadCap:snippetBlock>


<MadCap:snippetBlock src="../../shared/chunk/option-destination-tls-cert-file.htm"></MadCap:snippetBlock>


<MadCap:snippetBlock src="../../shared/chunk/option-destination-tls-cipher-suite.htm"></MadCap:snippetBlock>


<h6 name="tls-options-crl-dir" oldrole="simplesect">crl-dir()</h6>
<MadCap:keyword term="crl-dir()"></MadCap:keyword>
<MadCap:keyword term="crl_dir()"></MadCap:keyword>
<table cellspacing="0" class="RuledTableWithHeading_DoNotEdit" colsep="0" frame="topbot" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
<tbody>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Accepted values:</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Directory name</td>
</tr>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Default:</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">none</td>
</tr>
</tbody>
<col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;"></col></table>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> Name of a directory that contains the Certificate Revocation Lists for trusted CAs. Similarly to <span class="Code" oldrole="parameter">ca-dir()</span> files, use the 32-bit hash of the name of the issuing CAs as filenames. The extension of the files must be <span class="Code" oldrole="userinput">.r0</span>.</p>


<MadCap:snippetBlock src="../../shared/chunk/option-tls-option-dhparam-file.htm"></MadCap:snippetBlock>


<h6 name="tls-options-ecdh-curve-list" oldrole="simplesect">ecdh-curve-list()</h6>
<MadCap:keyword term="ecdh-curve-list()"></MadCap:keyword>
<MadCap:keyword term="ecdh-curve-list()"></MadCap:keyword>
<table cellspacing="0" class="RuledTableWithHeading_DoNotEdit" colsep="0" frame="topbot" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
<tbody>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Accepted values:</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"> string [colon-separated list]</td>
</tr>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Default:</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">none </td>
</tr>
</tbody>
<col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;"></col></table>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> A colon-separated list that specifies the curves that are permitted in the connection when using Elliptic Curve Cryptography (ECC).</p>
<p oldrole="para">This option is only available when syslog-ng is compiled with OpenSSL version 1.0.2 or later. In the case of older versions, prime256v1 (NIST P-256) is used.</p>
<p oldrole="para">The following example curves work for all versions of OpenSSL that are equal to or later than version 1.0.2:</p>
<pre class="Code" oldrole="synopsis">ecdh-curve-list("prime256v1:secp384r1")</pre>


<MadCap:snippetBlock src="../../shared/chunk/option-destination-tls-key-file.htm"></MadCap:snippetBlock>


<h6 name="tls-options-peer-verify" oldrole="simplesect">peer-verify()</h6>
<MadCap:keyword term="peer-verify()"></MadCap:keyword>
<MadCap:keyword term="peer_verify()"></MadCap:keyword>
<table cellspacing="0" class="RuledTableWithHeading_DoNotEdit" colsep="0" frame="topbot" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
<tbody>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Accepted values:</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"><span class="Code" oldrole="userinput">optional-trusted</span> | <span class="Code" oldrole="userinput">optional-untrusted</span> | <span class="Code" oldrole="userinput">required-trusted</span> | <span class="Code" oldrole="userinput">required-untrusted | <span class="Code" oldrole="userinput">yes</span> | <span class="Code" oldrole="userinput">no</span></span>
</td>
</tr>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Default:</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"><span class="Code" oldrole="userinput">required-trusted</span>
</td>
</tr>
</tbody>
<col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;"></col></table>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> Verification method of the peer, the four possible values is a combination of two properties of validation:</p>
<ul oldrole="itemizedlist">
<li oldrole="listitem">
<p oldrole="para">whether the peer is required to provide a certificate (required or optional prefix), and</p>
</li>
<li oldrole="listitem">
<p oldrole="para">whether the certificate provided needs to be valid or not.</p>
</li>
</ul>
<p oldrole="para">The following table summarizes the possible options and their results depending on the certificate of the peer.</p>
<table cellspacing="0" class="RuledTableWithHeading_DoNotEdit" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
<thead>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Head-Header1">
<th class="TableStyle-RuledTableWithHeading_DoNotEdit-HeadE-Column1-Header1"></th>
<th class="TableStyle-RuledTableWithHeading_DoNotEdit-HeadE-Column1-Header1">The remote peer has:</th>
</tr>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Head-Header1">
<th class="TableStyle-RuledTableWithHeading_DoNotEdit-HeadE-Column1-Header1"> no certificate </th>
<th class="TableStyle-RuledTableWithHeading_DoNotEdit-HeadE-Column1-Header1"> invalid certificate </th>
<th class="TableStyle-RuledTableWithHeading_DoNotEdit-HeadE-Column1-Header1"> valid certificate </th>
</tr>
</thead>
<tbody>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"><i oldrole="emphasis" role="bold">Local peer-verify() setting</i>
</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"><i oldrole="emphasis" role="bold">optional-untrusted</i>
</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"> TLS-encryption </td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"> TLS-encryption </td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"> TLS-encryption </td>
</tr>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"><i oldrole="emphasis" role="bold">optional-trusted</i>
</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"> TLS-encryption </td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"> rejected connection </td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"> TLS-encryption </td>
</tr>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"><i oldrole="emphasis" role="bold">required-untrusted</i>
</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"> rejected connection </td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"> TLS-encryption </td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"> TLS-encryption </td>
</tr>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"><i oldrole="emphasis" role="bold">required-trusted</i>
</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"> rejected connection </td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"> rejected connection </td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1"> TLS-encryption </td>
</tr>
</tbody>
<col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;"></col><col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;"></col><col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;"></col><col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;"></col></table>
<MadCap:snippetBlock src="../../shared/chunk/option-destination-tls-peer-verify-notes.htm"></MadCap:snippetBlock>
<p oldrole="para">Starting with <MadCap:variable name="General.abbrev"></MadCap:variable> version <MadCap:conditionaltext MadCap:conditions="ose">3.10</MadCap:conditionaltext>, you can also use a simplified configuration method for the <span class="Code" oldrole="parameter">peer-verify</span> option, simply setting it to <span class="Code" oldrole="userinput">yes</span> or <span class="Code" oldrole="userinput">no</span>. The following table summarizes the possible options and their results depending on the certificate of the peer.</p>
<MadCap:snippetBlock src="../../shared/chunk/option-tls-peer-verify-yesno.htm"></MadCap:snippetBlock>


<h6 name="tls-options-pkcs12-file" oldrole="simplesect">pkcs12-file()</h6>
<MadCap:keyword term="pkcs12-file()"></MadCap:keyword>
<MadCap:keyword term="pkcs12-file()"></MadCap:keyword>
<table cellspacing="0" class="RuledTableWithHeading_DoNotEdit" colsep="0" frame="topbot" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
<tbody>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Accepted values:</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Filename</td>
</tr>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Default:</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">none</td>
</tr>
</tbody>
<col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;"></col></table>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> The name of a <span class="Code" oldrole="filename">PKCS #12</span> file that contains an unencrypted private key, an X.509 certificate, and an optional set of trusted CA certificates.</p>
<p oldrole="para">If this option is used in the configuration, the value of <span class="Code" oldrole="parameter">key-file()</span> and <span class="Code" oldrole="parameter">cert-file()</span> will be omitted.</p>
<p oldrole="para">You can use the <span class="Code" oldrole="parameter">ca-dir()</span> option together with <span class="Code" oldrole="parameter">pkcs12-file()</span>. However, this is optional because the <span class="Code" oldrole="filename">PKCS #12</span> file may contain CA certificates as well.</p>
<p oldrole="para">Passphrase is currently not supported.</p>

<h6 oldrole="example">Example: Using <span class="Code" oldrole="parameter">pkcs12-file()</span>
</h6>
<p oldrole="para">In the following example, the first command creates a single <span class="Code" oldrole="filename">PKCS #12</span> file from the private key, X.509 certificate, and CA certificate files. Then, the second half of the example uses the same <span class="Code" oldrole="filename">PKCS #12</span> file in the syslog-ng configuration.</p>
<h6 oldrole="formalpara">Example:</h6>

<pre class="Code" oldrole="synopsis">$ openssl pkcs12 -export -inkey server.key -in server.crt -certfile ca.crt -out server.p12</pre>
<h6 oldrole="formalpara">Example configuration:</h6>

<pre class="Code" oldrole="synopsis">source s_tls {
    syslog(
        transport(tls)
        tls(
            pkcs12-file("/path/to/server.p12")
            ca-dir("/path/to/cadir") # optional
            peer-verify(yes)
        )
    );
};</pre>



<h6 name="tls-options-ssl-options" oldrole="simplesect">ssl-options()</h6>
<MadCap:keyword term="ssl-options()"></MadCap:keyword>
<MadCap:keyword term="ssl_options()"></MadCap:keyword>
<MadCap:keyword term="disable SSL"></MadCap:keyword>
<MadCap:keyword term="disabling SSL"></MadCap:keyword>
<MadCap:keyword term="disable TLS"></MadCap:keyword>
<MadCap:keyword term="disabling TLS"></MadCap:keyword>
<table cellspacing="0" class="RuledTableWithHeading_DoNotEdit" colsep="0" frame="topbot" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
<tbody>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Accepted values:</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">comma-separated list of the following options: no-sslv2, no-sslv3, no-tlsv1, no-tlsv11, no-tlsv12, none</td>
</tr>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Default:</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">no-sslv2</td>
</tr>
</tbody>
<col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;"></col></table>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> Sets the specified options of the SSL/TLS protocols. Currently, you can use it to disable specific protocol versions. Note that disabling a newer protocol version (for example, TLSv1.1) does not automatically disable older versions of the same protocol (for example, TLSv1.0). For example, use the following option to permit using only TLSv1.1 or newer:</p>
<MadCap:keyword term="disable SSL"></MadCap:keyword>
<pre class="Code" oldrole="synopsis">ssl-options(no-sslv2, no-sslv3, no-tlsv1)</pre>
<p oldrole="para">Using <span class="Code" oldrole="userinput">ssl-options(none)</span> means that <MadCap:variable name="General.abbrev"></MadCap:variable> does not specify any restrictions on the protocol used. However, in this case, the underlying OpenSSL library can restrict the available protocols, for example, certain OpenSSL versions automatically disable SSLv2.</p>
<p oldrole="para">This option is available in <MadCap:variable name="General.abbrev"></MadCap:variable> <MadCap:conditionaltext MadCap:conditions="ose">3.7</MadCap:conditionaltext><MadCap:conditionaltext MadCap:conditions="pe">7.0</MadCap:conditionaltext> and newer.</p>

<h6 oldrole="example">Example: Using <span class="Code" oldrole="parameter">ssl-options</span>
</h6>
<p oldrole="para">The following destination explicitly disables SSL and TLSv1.0</p>
<pre class="Code" oldrole="synopsis">destination demo_tls_destination {
    network("172.16.177.147" port(6514)
    transport("tls")
    tls( ca-dir("/etc/syslog-ng/ca.d")
         key-file("/etc/syslog-ng/cert.d/clientkey.pem")
         cert-file("/etc/syslog-ng/cert.d/clientcert.pem")
         ssl-options(no-sslv2, no-sslv3, no-tlsv1) )
    ); };</pre>



<h6 name="tls-options-trusted-dn" oldrole="simplesect">trusted-dn()</h6>
<MadCap:keyword term="trusted-dn()"></MadCap:keyword>
<MadCap:keyword term="trusted_dn()"></MadCap:keyword>
<table cellspacing="0" class="RuledTableWithHeading_DoNotEdit" colsep="0" frame="topbot" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
<tbody>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Accepted values:</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">list of accepted distinguished names</td>
</tr>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Default:</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">none</td>
</tr>
</tbody>
<col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;"></col></table>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> To accept connections only from hosts using certain certificates signed by the trusted CAs, list the distinguished names of the accepted certificates in this parameter. For example using <span class="Code" oldrole="userinput">trusted-dn("*, O=Example Inc, ST=Some-State, C=*")</span> will accept only certificates issued for the <span class="Code" oldrole="userinput">Example Inc</span> organization in <span class="Code" oldrole="userinput">Some-State</span> state.</p>


<h6 name="tls-options-trusted-keys" oldrole="simplesect">trusted-keys()</h6>
<MadCap:keyword term="trusted-keys()"></MadCap:keyword>
<MadCap:keyword term="trusted_keys()"></MadCap:keyword>
<table cellspacing="0" class="RuledTableWithHeading_DoNotEdit" colsep="0" frame="topbot" rowsep="0" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/RuledTableWithHeading_DoNotEdit.css');">
<tbody>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Accepted values:</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">list of accepted SHA-1 fingerprints</td>
</tr>
<tr class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">Default:</td>
<td class="TableStyle-RuledTableWithHeading_DoNotEdit-Body-Body1">none</td>
</tr>
</tbody>
<col class="TableStyle-RuledTableWithHeading_DoNotEdit-Column-Column1" style="width: 0.3in;"></col></table>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> To accept connections only from hosts using certain certificates having specific SHA-1 fingerprints, list the fingerprints of the accepted certificates in this parameter. For example <span class="Code" oldrole="userinput">trusted-keys("SHA1:00:EF:ED:A4:CE:00:D1:14:A4:AB:43:00:EF:00:91:85:FF:89:28:8F", "SHA1:0C:42:00:3E:B2:60:36:64:00:E2:83:F0:80:46:AD:00:A8:9D:00:15")</span>.</p>
<p oldrole="para">To find the fingerprint of a certificate, you can use the following command: <b oldrole="command">openssl x509 -in &lt;certificate-filename&gt; -sha1 -noout -fingerprint</b></p>
<table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');"><col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;"></col><col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2"></col><tbody><tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1"><td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1"><p><img src="../../Resources/Images/Common/note.png"/></p></td><td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1"><span class="AllNoteStyles">NOTE: </span><p oldrole="para">When using the <span class="Code" oldrole="parameter">trusted-keys()</span> and <span class="Code" oldrole="parameter">trusted-dn()</span> parameters, note the following:</p><ul oldrole="itemizedlist">
<li oldrole="listitem">
<p oldrole="para">First, the <span class="Code" oldrole="parameter">trusted-keys()</span> parameter is checked. If the fingerprint of the peer is listed, the certificate validation is performed.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">If the fingerprint of the peer is not listed in the <span class="Code" oldrole="parameter">trusted-keys()</span> parameter, the <span class="Code" oldrole="parameter">trusted-dn()</span> parameter is checked. If the DN of the peer is not listed in the <span class="Code" oldrole="parameter">trusted-dn()</span> parameter, the authentication of the peer fails and the connection is closed.</p>
</li>
</ul></td></tr></tbody></table>

</body></html>
