<?xml version="1.0" encoding="UTF-8"?>

 %entities;]&gt;
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd"><body name="configuring-destinations-elasticsearch" oldrole="section">
<h1 name="configuring-destinations-elasticsearch" oldrole="section"><span class="Code" oldrole="parameter">elasticsearch</span>: Sending messages directly to Elasticsearch version 1.x</h1>
<MadCap:keyword term="destination drivers:[&lt;span class=&quot;Code&quot; oldrole=&quot;parameter&quot;&gt;java()&lt;/span&gt;, ' driver']"></MadCap:keyword>
<MadCap:keyword term='destination drivers:[&lt;span class="Code" oldrole="parameter"&gt;elasticsearch&lt;/span&gt;]'></MadCap:keyword>
<p oldrole="para">Starting with version <MadCap:conditionaltext MadCap:conditions="pe">5.6</MadCap:conditionaltext><MadCap:conditionaltext MadCap:conditions="ose">3.7</MadCap:conditionaltext> of <MadCap:variable name="General.abbrev"></MadCap:variable> can directly send log messages to <a href="https://www.elastic.co/products/elasticsearch">Elasticsearch</a>, allowing you to search and analyze your data in real time, and visualize it with <a href="https://www.elastic.co/products/kibana">Kibana</a>.</p>
<p oldrole="para">Note the following limitations when using the <entity>abbrev</entity> <span class="Code" oldrole="parameter">elasticsearch</span> destination:</p>
<ul oldrole="itemizedlist">
<MadCap:snippetBlock src="../../shared/chunk/listitem-java-supported-platforms.htm"></MadCap:snippetBlock>
<li oldrole="listitem">
<p oldrole="para">Since <entity>abbrev</entity> uses the official Java Elasticsearch libraries, the <span class="Code" oldrole="parameter">elasticsearch</span> destination has significant memory usage.</p>
</li>
<li condition="ose" oldrole="listitem">
<p oldrole="para">Sending messages over the HTTP REST API is supported only using the <span class="Code" oldrole="parameter">elastic2()</span> destination. Note that in HTTP mode, the <span class="Code" oldrole="parameter">elasticsearch2</span> destination can send log messages to Elasticsearch version 1.x and newer. For details, see <xref linkend="configuring-destinations-elasticsearch2"></xref>.</p>
</li>
<MadCap:snippetBlock src="../../shared/chunk/listitem-java-internal-messages.htm"></MadCap:snippetBlock>
</ul>

<h6 oldrole="formalpara">Declaration:</h6>
<p oldrole="para"></p>

<pre class="Code" oldrole="synopsis">@module mod-java
@include "scl.conf"

elasticsearch(
    index("syslog-ng_${YEAR}.${MONTH}.${DAY}")
    type("test")
    cluster("syslog-ng")
);</pre>
<example xml:id="example-destination-elasticsearch">
<title>Sending log data to Elasticsearch version 1.x</title>
<p oldrole="para">The following example defines an <span class="Code" oldrole="parameter">elasticsearch</span> destination that sends messages in transport mode to an Elasticsearch server version 1.x running on the localhost, using only the required parameters.</p>
<pre class="Code" oldrole="synopsis">@module mod-java
@include "scl.conf"

destination d_elastic {
  elasticsearch(
    index("syslog-ng_${YEAR}.${MONTH}.${DAY}")
    type("test")
  );
};
</pre>
<p oldrole="para">The following example sends 10000 messages in a batch, in transport mode, and includes a custom unique ID for each message.</p>
<pre class="Code" oldrole="synopsis">@module mod-java
@include "scl.conf"

options {
  threaded(yes);
  use-uniqid(yes);
};

source s_syslog {
  syslog();
};

destination d_elastic {
  elasticsearch(
    index("syslog-ng_${YEAR}.${MONTH}.${DAY}")
    type("test")
    cluster("syslog-ng")
    client-mode("transport")
    custom-id("${UNIQID}")
    flush-limit("10000")
  );
};

log {
  source(s_syslog);
  destination(d_elastic);
  flags(flow-control);
};</pre>
</example>
<ul oldrole="itemizedlist">
<li oldrole="listitem">
<p oldrole="para">To install the software required for the <span class="Code" oldrole="parameter">elasticsearch</span> destination, see <xref linkend="destination-elasticsearch-prerequisites"></xref>.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">For details on how the <span class="Code" oldrole="parameter">elasticsearch</span> destination works, see <xref linkend="destination-elasticsearch-interaction"></xref>.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">For the list of options, see <xref linkend="reference-destination-elasticsearch"></xref>.</p>
</li>
</ul>
<p condition="ose" oldrole="para">The <span class="Code" oldrole="parameter">elasticsearch()</span> driver is actually a reusable configuration snippet configured to receive log messages using the Java language-binding of <entity>abbrev</entity>. For details on using or writing such configuration snippets, see <xref linkend="config-blocks"></xref>. You can find the source of the elasticsearch configuration snippet on <a href="https://github.com/balabit/syslog-ng/blob/master/scl/elasticsearch/plugin.conf">GitHub</a>. For details on extending <entity>abbrev</entity> in Java, see the <a href="https://syslog-ng.gitbooks.io/getting-started/content/chapters/chapter_5/section_2.html">Getting started with syslog-ng development</a> guide.</p>
<MadCap:snippetBlock src="destination-elasticsearch-prerequisites.htm"></MadCap:snippetBlock>

<h2 name="destination-elasticsearch-interaction">How <entity>abbrev</entity> interacts with Elasticsearch</h2>
<p oldrole="para">The <entity>abbrev</entity> application sends the log messages to the official Elasticsearch client library, which forwards the data to the Elasticsearch nodes. The way <entity>abbrev</entity> interacts with Elasticsearch is described in the following steps.</p>
<ul oldrole="itemizedlist">
<li oldrole="listitem">
<p oldrole="para">After <entity>abbrev</entity> is started and the first message arrives to the <span class="Code" oldrole="parameter">elasticsearch</span> destination, the <span class="Code" oldrole="parameter">elasticsearch</span> destination tries to connect to the Elasticsearch server or cluster. If the connection fails, <entity>abbrev</entity> will repeatedly attempt to connect again after the period set in <span class="Code" oldrole="parameter">time-reopen()</span> expires.</p>
</li>
<li oldrole="listitem">
<p oldrole="para">If the connection is established, <entity>abbrev</entity> sends JSON-formatted messages to Elasticsearch.</p>
<MadCap:snippetBlock src="../../shared/chunk/option-destination-elasticsearch-flush-limit-description.htm"></MadCap:snippetBlock>
</li>
</ul>


<h2 name="destination-elasticsearch-client-modes">Client modes</h2>
<p oldrole="para">The <entity>abbrev</entity> application can interact with Elasticsearch in transport mode or node mode.</p>
<ul oldrole="itemizedlist" version="5.0" xmlns="http://docbook.org/ns/docbook">
<li oldrole="listitem">

<h6 oldrole="formalpara">Transport mode</h6>
<p oldrole="para">The <entity>abbrev</entity> application uses the transport client API of Elasticsearch, and uses the <span class="Code" oldrole="parameter">server()</span>, <span class="Code" oldrole="parameter">port()</span>, and <span class="Code" oldrole="parameter">cluster()</span> options from the <entity>abbrev</entity> configuration file.</p>

</li>
<li oldrole="listitem">

<h6 oldrole="formalpara">Node mode</h6>
<p oldrole="para">The <entity>abbrev</entity> application acts as an Elasticsearch node (client no-data), using the node client API of Elasticsearch. Further options for the node can be describe in an Elasticsearch configuration file specified in the <span class="Code" oldrole="parameter">resource()</span> option.</p>

<table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');"><col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;"></col><col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2"></col><tbody><tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1"><td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1"><p><img src="../../Resources/Images/Common/note.png"/></p></td><td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1"><span class="AllNoteStyles">NOTE: </span><p oldrole="para">In Node mode, it is required to define the home of the elasticsearch installation with the <span class="Code" oldrole="parameter">path.home</span> paramter in the <span class="Code" oldrole="filename">.yml</span> file. For example: <span class="Code" oldrole="userinput">path.home: /usr/share/elasticsearch</span>.</p></td></tr></tbody></table>
</li>
</ul>


<h2 name="reference-destination-elasticsearch">Elasticsearch destination options</h2>
<indexterm>
<primary>destination drivers</primary>
<secondary><span class="Code" oldrole="parameter">java()</span> driver</secondary>
</indexterm>
<indexterm>
<primary>destination drivers</primary>
<secondary><span class="Code" oldrole="parameter">elasticsearch</span></secondary>
</indexterm>
<p oldrole="para">The <span class="Code" oldrole="parameter">elasticsearch</span> destination can directly send log messages to <a href="https://www.elastic.co/products/elasticsearch">Elasticsearch</a>, allowing you to search and analyze your data in real time, and visualize it with <a href="https://www.elastic.co/products/kibana">Kibana</a>. The <span class="Code" oldrole="parameter">elasticsearch</span> destination has the following options.</p>

<h6 oldrole="formalpara">Required options:</h6>
<p oldrole="para"></p>

<p oldrole="para">The following options are required: <span class="Code" oldrole="parameter">index()</span>, <span class="Code" oldrole="parameter">type()</span>. In node mode, the <span class="Code" oldrole="parameter">cluster()</span> and the <span class="Code" oldrole="parameter">resource()</span> options are required as well. Note that to use <span class="Code" oldrole="parameter">elasticsearch</span>, you must add the following lines to the beginning of your <entity>abbrev</entity> configuration:</p>
<pre class="Code" oldrole="synopsis">@module mod-java
@include "scl.conf"</pre>
<simplesect>
<MadCap:snippetBlock src="../../shared/chunk/option-destination-java-class-path.htm"></MadCap:snippetBlock>
<p oldrole="para">For the <span class="Code" oldrole="parameter">elasticsearch</span> destination, include the path to the directory where you copied the required libraries (see <xref linkend="destination-elasticsearch-prerequisites"></xref>), for example, <span class="Code" oldrole="userinput">client-lib-dir("/opt/elasticsearch/libs")</span>.</p>
</simplesect>
<simplesect xml:id="elasticsearch-option-elasticsearch-client-mode">
<title>client-mode()</title>
<indexterm type="parameter">
<primary>client-mode()</primary>
<secondary>elasticsearch</secondary>
</indexterm>
<indexterm type="parameter">
<primary>elasticsearch</primary>
<secondary>client-mode</secondary>
</indexterm>
<informaltable colsep="0" frame="topbot" rowsep="0">
<tgroup cols="2">
<colspec colnum="1" colwidth="40pt"></colspec>
<tbody>
<row>
<entry>Type:</entry>
<entry>transport | node</entry>
</row>
<row>
<entry>Default:</entry>
<entry>node</entry>
</row>
</tbody>
</tgroup>
</informaltable>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> Specifies the client mode used to connect to the Elasticsearch server, for example, <span class="Code" oldrole="userinput">client-mode("node")</span>.</p>
<ul oldrole="itemizedlist">
<li oldrole="listitem">

<h6 oldrole="formalpara">Transport mode</h6>
<p oldrole="para">The <entity>abbrev</entity> application uses the transport client API of Elasticsearch, and uses the <span class="Code" oldrole="parameter">server()</span>, <span class="Code" oldrole="parameter">port()</span>, and <span class="Code" oldrole="parameter">cluster()</span> options from the <entity>abbrev</entity> configuration file.</p>

</li>
<li oldrole="listitem">

<h6 oldrole="formalpara">Node mode</h6>
<p oldrole="para">The <entity>abbrev</entity> application acts as an Elasticsearch node (client no-data), using the node client API of Elasticsearch. Further options for the node can be describe in an Elasticsearch configuration file specified in the <span class="Code" oldrole="parameter">resource()</span> option.</p>

<table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');"><col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;"></col><col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2"></col><tbody><tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1"><td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1"><p><img src="../../Resources/Images/Common/note.png"/></p></td><td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1"><span class="AllNoteStyles">NOTE: </span><p oldrole="para">In Node mode, it is required to define the home of the elasticsearch installation with the <span class="Code" oldrole="parameter">path.home</span> parameter in the <span class="Code" oldrole="filename">.yml</span> file. For example: <span class="Code" oldrole="userinput">path.home: /usr/share/elasticsearch</span>.</p></td></tr></tbody></table>
</li>
</ul>
</simplesect>
<simplesect xml:id="elasticsearch-option-elasticsearch-cluster">
<title>cluster()</title>
<indexterm type="parameter">
<primary>cluster()</primary>
<secondary>elasticsearch</secondary>
</indexterm>
<indexterm type="parameter">
<primary>elasticsearch</primary>
<secondary>cluster</secondary>
</indexterm>
<informaltable colsep="0" frame="topbot" rowsep="0">
<tgroup cols="2">
<colspec colnum="1" colwidth="40pt"></colspec>
<tbody>
<row>
<entry>Type:</entry>
<entry>string</entry>
</row>
<row>
<entry>Default:</entry>
<entry>N/A</entry>
</row>
</tbody>
</tgroup>
</informaltable>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> Specifies the name or the Elasticsearch cluster, for example, <span class="Code" oldrole="userinput">cluster("my-elasticsearch-cluster")</span>. Optionally, you can specify the name of the cluster in the Elasticsearch resource file. For details, see <xref linkend="elasticsearch-option-elasticsearch-resource"></xref>.</p>
</simplesect>
<simplesect xml:id="elasticsearch-option-elasticsearch-cluster-url">
<MadCap:snippetBlock src="../../shared/chunk/option-destination-elasticsearch-cluster-url.htm"></MadCap:snippetBlock>
</simplesect>
<simplesect xml:id="elasticsearch-option-elasticsearch-concurrent-requests">
<title>concurrent-requests()</title>
<indexterm type="parameter">
<primary>concurrent-requests()</primary>
<secondary>elasticsearch</secondary>
</indexterm>
<indexterm type="parameter">
<primary>elasticsearch</primary>
<secondary>concurrent-requests</secondary>
</indexterm>
<informaltable colsep="0" frame="topbot" rowsep="0">
<tgroup cols="2">
<colspec colnum="1" colwidth="40pt"></colspec>
<tbody>
<row>
<entry>Type:</entry>
<entry>number</entry>
</row>
<row>
<entry>Default:</entry>
<entry>0</entry>
</row>
</tbody>
</tgroup>
</informaltable>
<indexterm>
<primary>elasticsearch</primary>
<secondary>performance</secondary>
</indexterm>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> The number of concurrent (simultaneous) requests that <entity>abbrev</entity> sends to the Elasticsearch server. Set this option to 1 or higher to increase performance. When using the <span class="Code" oldrole="parameter">concurrent-requests()</span> option, make sure that the <span class="Code" oldrole="parameter">flush-limit()</span> option is higher than one, otherwise it will not have any noticeable effect. For details, see <xref linkend="elasticsearch-option-elasticsearch-flush-limit"></xref>.</p>
<table cellspacing="0" class="TableStyle-NoteTable_Yellow_DoNotEdit" oldrole="warning" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Yellow_DoNotEdit.css');"><col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column1" style="width: 0.3in;"></col><col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column2"></col><tbody><tr class="TableStyle-NoteTable_Yellow_DoNotEdit-Body-Body1"><td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyB-Column1-Body1"><p><img src="../../Resources/Images/Common/caution.png"/></p></td><td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyA-Column2-Body1"><span class="Yellow">Caution: </span><p oldrole="para">Hazard of data loss! Using the <span class="Code" oldrole="parameter">concurrent-requests()</span> option increases the number of messages lost in case the Elasticsearch server becomes unaccessible.</p></td></tr></tbody></table>
</simplesect>
<simplesect xml:id="elasticsearch-option-elasticsearch-custom-id">
<title>custom-id()</title>
<indexterm type="parameter">
<primary>custom-id()</primary>
<secondary>elasticsearch</secondary>
</indexterm>
<indexterm type="parameter">
<primary>elasticsearch</primary>
<secondary>custom-id</secondary>
</indexterm>
<informaltable colsep="0" frame="topbot" rowsep="0">
<tgroup cols="2">
<colspec colnum="1" colwidth="40pt"></colspec>
<tbody>
<row>
<entry>Type:</entry>
<entry>template or template function</entry>
</row>
<row>
<entry>Default:</entry>
<entry>N/A</entry>
</row>
</tbody>
</tgroup>
</informaltable>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> Use this option to specify a custom ID for the records inserted into Elasticsearch. If this option is not set, the Elasticsearch server automatically generates and ID for the message. For example: <span class="Code" oldrole="userinput">custom-id(${UNIQID})</span> (Note that to use the <span class="Code" oldrole="userinput">${UNIQID}</span> macro, the <span class="Code" oldrole="parameter">use-uniqid()</span> global option must be enabled. For details, see <xref linkend="global-use-uniqid"></xref>.)</p>
</simplesect>
<simplesect>
<MadCap:snippetBlock src="../../shared/chunk/option-destination-diskbuffer.htm"></MadCap:snippetBlock>
</simplesect>
<simplesect xml:id="elasticsearch-option-elasticsearch-flush-limit">
<title>flush-limit()</title>
<indexterm type="parameter">
<primary>flush-limit()</primary>
<secondary>elasticsearch</secondary>
</indexterm>
<indexterm type="parameter">
<primary>elasticsearch</primary>
<secondary>flush-limit</secondary>
</indexterm>
<informaltable colsep="0" frame="topbot" rowsep="0">
<tgroup cols="2">
<colspec colnum="1" colwidth="40pt"></colspec>
<tbody>
<row>
<entry>Type:</entry>
<entry>number</entry>
</row>
<row>
<entry>Default:</entry>
<entry>5000</entry>
</row>
</tbody>
</tgroup>
</informaltable>
<indexterm>
<primary>elasticsearch</primary>
<secondary>performance</secondary>
</indexterm>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> The number of messages that <entity>abbrev</entity> sends to the Elasticsearch server in a single batch.</p>
<MadCap:snippetBlock src="../../shared/chunk/option-destination-elasticsearch-flush-limit-description.htm"></MadCap:snippetBlock>
</simplesect>
<simplesect>
<MadCap:snippetBlock src="../../shared/chunk/option-destination-frac-digits.htm"></MadCap:snippetBlock>
</simplesect>
<simplesect xml:id="elasticsearch-option-elasticsearch-index">
<title>index()</title>
<indexterm type="parameter">
<primary>index()</primary>
<secondary>elasticsearch</secondary>
</indexterm>
<indexterm type="parameter">
<primary>elasticsearch</primary>
<secondary>index</secondary>
</indexterm>
<informaltable colsep="0" frame="topbot" rowsep="0">
<tgroup cols="2">
<colspec colnum="1" colwidth="40pt"></colspec>
<tbody>
<row>
<entry>Type:</entry>
<entry>string</entry>
</row>
<row>
<entry>Default:</entry>
<entry>N/A</entry>
</row>
</tbody>
</tgroup>
</informaltable>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> Name of the Elasticsearch index to store the log messages. You can use macros and templates as well. For example, <span class="Code" oldrole="userinput">index("syslog-ng_${YEAR}.${MONTH}.${DAY}")</span>.</p>
</simplesect>
<simplesect xml:id="elasticsearch-1-destination-jvm-options">
<MadCap:snippetBlock src="../../shared/chunk/option-destination-jvm-options.htm"></MadCap:snippetBlock>
</simplesect>
<simplesect>
<MadCap:snippetBlock src="../../shared/chunk/option-destination-log-fifo-size.htm"></MadCap:snippetBlock>
</simplesect>
<simplesect>
<MadCap:snippetBlock src="../../shared/chunk/option-destination-on-error.htm"></MadCap:snippetBlock>
</simplesect>
<simplesect xml:id="elasticsearch-option-elasticsearch-port">
<title>port()</title>
<indexterm type="parameter">
<primary>port()</primary>
<secondary>elasticsearch</secondary>
</indexterm>
<indexterm type="parameter">
<primary>elasticsearch</primary>
<secondary>port</secondary>
</indexterm>
<informaltable colsep="0" frame="topbot" rowsep="0">
<tgroup cols="2">
<colspec colnum="1" colwidth="40pt"></colspec>
<tbody>
<row>
<entry>Type:</entry>
<entry>number</entry>
</row>
<row>
<entry>Default:</entry>
<entry>9300</entry>
</row>
</tbody>
</tgroup>
</informaltable>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> The port number of the Elasticsearch server. This option is used only in transport mode: <span class="Code" oldrole="userinput">client-mode("transport")</span></p>
</simplesect>
<simplesect>
<MadCap:snippetBlock src="../../shared/chunk/option-destination-retries.htm"></MadCap:snippetBlock>
</simplesect>
<simplesect xml:id="elasticsearch-option-elasticsearch-resource">
<title>resource()</title>
<indexterm type="parameter">
<primary>resource()</primary>
<secondary>elasticsearch</secondary>
</indexterm>
<indexterm type="parameter">
<primary>elasticsearch</primary>
<secondary>resource</secondary>
</indexterm>
<informaltable colsep="0" frame="topbot" rowsep="0">
<tgroup cols="2">
<colspec colnum="1" colwidth="40pt"></colspec>
<tbody>
<row>
<entry>Type:</entry>
<entry>string</entry>
</row>
<row>
<entry>Default:</entry>
<entry>N/A</entry>
</row>
</tbody>
</tgroup>
</informaltable>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> The list of Elasticsearch resources to load, separated by semicolons. For example, <span class="Code" oldrole="userinput">resource("/home/user/elasticsearch/elasticsearch.yml;/home/user/elasticsearch/elasticsearch2.yml")</span>.</p>
</simplesect>
<simplesect xml:id="elasticsearch-option-elasticsearch-server">
<title>server()</title>
<indexterm type="parameter">
<primary>server()</primary>
<secondary>elasticsearch</secondary>
</indexterm>
<indexterm type="parameter">
<primary>elasticsearch</primary>
<secondary>server</secondary>
</indexterm>
<informaltable colsep="0" frame="topbot" rowsep="0">
<tgroup cols="2">
<colspec colnum="1" colwidth="40pt"></colspec>
<tbody>
<row>
<entry>Type:</entry>
<entry>list of hostnames</entry>
</row>
<row>
<entry>Default:</entry>
<entry>127.0.0.1</entry>
</row>
</tbody>
</tgroup>
</informaltable>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> Specifies the hostname or IP address of the Elasticsearch server. When specifying an IP address, IPv4 (for example, <span class="Code" oldrole="userinput">192.168.0.1</span>) or IPv6 (for example, <span class="Code" oldrole="userinput">[::1]</span>) can be used as well. When specifying multiple addresses, use space to separate the addresses, for example, <span class="Code" oldrole="userinput">server("127.0.0.1 remote-server-hostname1 remote-server-hostname2")</span></p>
<p oldrole="para">This option is used only in transport mode: <span class="Code" oldrole="userinput">client-mode("transport")</span></p>
</simplesect>
<simplesect xml:id="elasticsearch-option-elasticsearch-template">
<title>template()</title>
<indexterm type="parameter">
<primary>template()</primary>
<secondary>elasticsearch</secondary>
</indexterm>
<indexterm type="parameter">
<primary>elasticsearch</primary>
<secondary>template</secondary>
</indexterm>
<informaltable colsep="0" frame="topbot" rowsep="0">
<tgroup cols="2">
<colspec colnum="1" colwidth="40pt"></colspec>
<tbody>
<row>
<entry>Type:</entry>
<entry>template or template function</entry>
</row>
<row>
<entry>Default:</entry>
<entry>$(format-json --scope rfc5424 --exclude DATE --key ISODATE @timestamp=${ISODATE})</entry>
</row>
</tbody>
</tgroup>
</informaltable>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> The message as sent to the Elasticsearch server. Typically, you will want to use the command-line notation of the <span class="Code" oldrole="userinput">format-json</span> template function.</p>
<p oldrole="para">To add a <span class="Code" oldrole="userinput">@timestamp</span> field to the message, for example, to use with Kibana, include the <span class="Code" oldrole="userinput">@timestamp=${ISODATE}</span> expression in the template. For example: <span class="Code" oldrole="userinput">template($(format-json --scope rfc5424 --exclude DATE --key ISODATE @timestamp=${ISODATE}))</span></p>
<p oldrole="para">For details on formatting messages in JSON format, see <xref linkend="template-function-format-json"></xref>.</p>
</simplesect>
<simplesect>
<MadCap:snippetBlock src="../../shared/chunk/option-destination-throttle.htm"></MadCap:snippetBlock>
</simplesect>
<simplesect>
<MadCap:snippetBlock src="../../shared/chunk/option-destination-timezone.htm"></MadCap:snippetBlock>
</simplesect>
<simplesect>
<MadCap:snippetBlock src="../../shared/chunk/option-destination-ts-format.htm"></MadCap:snippetBlock>
</simplesect>
<simplesect xml:id="elasticsearch-option-elasticsearch-type">
<title>type()</title>
<indexterm type="parameter">
<primary>type()</primary>
<secondary>elasticsearch</secondary>
</indexterm>
<indexterm type="parameter">
<primary>elasticsearch</primary>
<secondary>type</secondary>
</indexterm>
<informaltable colsep="0" frame="topbot" rowsep="0">
<tgroup cols="2">
<colspec colnum="1" colwidth="40pt"></colspec>
<tbody>
<row>
<entry>Type:</entry>
<entry>string</entry>
</row>
<row>
<entry>Default:</entry>
<entry>N/A</entry>
</row>
</tbody>
</tgroup>
</informaltable>
<p oldrole="para"><i oldrole="emphasis" role="bold">Description:</i> The type of the index. For example, <span class="Code" oldrole="userinput">type("test")</span>.</p>
</simplesect>

</body></html>
