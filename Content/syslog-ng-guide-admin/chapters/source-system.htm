<?xml version="1.0" encoding="UTF-8"?>
%entities;]&gt;
<html xmlns:MadCap="http://www.madcapsoftware.com/Schemas/MadCap.xsd">
 <body condition="ose" name="source-system" oldrole="section">
  <h1 condition="ose" name="source-system" oldrole="section">
   <span class="Code" oldrole="parameter">
    system
   </span>
   : Collecting the system-specific log messages of a platform
  </h1>
  <MadCap:keyword term="system()">
  </MadCap:keyword>
  <MadCap:keyword term="source drivers:[&lt;span class=&quot;Code&quot; oldrole=&quot;parameter&quot;&gt;system()&lt;/span&gt;, ' driver']">
  </MadCap:keyword>
  <MadCap:keyword term='scl:[&lt;span class="Code" oldrole="parameter"&gt;system()&lt;/span&gt;]'>
  </MadCap:keyword>
  <p oldrole="para">
   Starting with version
   <MadCap:conditionaltext MadCap:conditions="pe">
    4 F1
   </MadCap:conditionaltext>
   <MadCap:conditionaltext MadCap:conditions="ose">
    3.2
   </MadCap:conditionaltext>
   ,
   <MadCap:variable name="General.abbrev">
    abbrev
   </MadCap:variable>
   can automatically collect the system-specific log messages of the host on a number of platforms using the
   <span class="Code" oldrole="parameter">
    system()
   </span>
   driver. If the
   <span class="Code" oldrole="parameter">
    system()
   </span>
   driver is included in the
   <MadCap:variable name="General.abbrev">
    abbrev
   </MadCap:variable>
   configuration file,
   <MadCap:variable name="General.abbrev">
    abbrev
   </MadCap:variable>
   automatically adds the following sources to the
   <MadCap:variable name="General.abbrev">
    abbrev
   </MadCap:variable>
   configuration.
  </p>
  <table cellspacing="0" class="TableStyle-NoteTable_Blue_DoNotEdit" oldrole="note" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Blue_DoNotEdit.css');">
   <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column1" style="width: 0.3in;">
   </col>
   <col class="TableStyle-NoteTable_Blue_DoNotEdit-Column-Column2">
   </col>
   <tbody>
    <tr class="TableStyle-NoteTable_Blue_DoNotEdit-Body-Body1">
     <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyB-Column1-Body1">
      <p>
       <img src="../../Resources/Images/Common/note.png"/>
      </p>
     </td>
     <td class="TableStyle-NoteTable_Blue_DoNotEdit-BodyA-Column2-Body1">
      <span class="AllNoteStyles">
       NOTE:
      </span>
      <p oldrole="para">
       <MadCap:variable name="General.abbrev">
        abbrev
       </MadCap:variable>
       versions
       <MadCap:conditionaltext MadCap:conditions="pe">
        4.1-5.0
       </MadCap:conditionaltext>
       <MadCap:conditionaltext MadCap:conditions="ose">
        3.2-3.3
       </MadCap:conditionaltext>
       used an external script to generate the
       <span class="Code" oldrole="parameter">
        system()
       </span>
       source, but this was problematic in certain situations, for example, when the host used a strict AppArmor profile. Therefore, the
       <span class="Code" oldrole="parameter">
        system()
       </span>
       source is now generated internally in
       <MadCap:variable name="General.abbrev">
        abbrev
       </MadCap:variable>
       .
      </p>
     </td>
    </tr>
   </tbody>
  </table>
  <p oldrole="para">
   The
   <span class="Code" oldrole="parameter">
    system()
   </span>
   driver is also used in the default configuration file of
   <MadCap:variable name="General.abbrev">
    abbrev
   </MadCap:variable>
   . For details on the default configuration file, see
   <MadCap:xref href="configure-clients.htm#example-defaultconfig">
   </MadCap:xref>
   . Starting with
   <MadCap:variable name="General.abbrev">
    abbrev
   </MadCap:variable>
   version
   <MadCap:conditionaltext MadCap:conditions="ose">
    3.6
   </MadCap:conditionaltext>
   , you can use the
   <b oldrole="command">
    system-expand
   </b>
   command-line utility (which is a shell script, located in the
   <span class="Code" oldrole="filename">
    modules/system-source/
   </span>
   directory) to display the configuration that the
   <span class="Code" oldrole="parameter">
    system()
   </span>
   source will use.
  </p>
  <table cellspacing="0" class="TableStyle-NoteTable_Yellow_DoNotEdit" oldrole="warning" style="width: 100%;mc-table-style: url('../../Resources/TableStyles/NoteTable_Yellow_DoNotEdit.css');">
   <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column1" style="width: 0.3in;">
   </col>
   <col class="TableStyle-NoteTable_Yellow_DoNotEdit-Column-Column2">
   </col>
   <tbody>
    <tr class="TableStyle-NoteTable_Yellow_DoNotEdit-Body-Body1">
     <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyB-Column1-Body1">
      <p>
       <img src="../../Resources/Images/Common/caution.png"/>
      </p>
     </td>
     <td class="TableStyle-NoteTable_Yellow_DoNotEdit-BodyA-Column2-Body1">
      <span class="Yellow">
       Caution:
      </span>
      <p oldrole="para">
       If
       <MadCap:variable name="General.abbrev">
        abbrev
       </MadCap:variable>
       does not recognize the platform it is installed on, it does not add any sources.
      </p>
     </td>
    </tr>
   </tbody>
  </table>
  <p oldrole="para">
   Starting with version
   <MadCap:conditionaltext MadCap:conditions="ose">
    3.6
   </MadCap:conditionaltext>
   ,
   <MadCap:variable name="General.abbrev">
    abbrev
   </MadCap:variable>
   parses messages complying with the
   <a href="http://docs.splunk.com/Documentation/CIM/latest/User/Overview">
    Splunk Common Information Model (CIM)
   </a>
   and marked with
   <span class="Code" oldrole="userinput">
    @cim
   </span>
   as JSON messages (for example, the ulogd from the netfilter project can emit such messages). That way, you can forward such messages without losing any information to CIM-aware applications (for example, Splunk).
  </p>
  <indexterm>
   <primary>
    Common Information Model (CIM)
   </primary>
  </indexterm>
  <indexterm>
   <primary>
    JSON
   </primary>
   <secondary>
    Common Information Model (CIM)
   </secondary>
  </indexterm>
  <indexterm>
   <primary>
    CIM
   </primary>
  </indexterm>
  <indexterm>
   <primary>
    @cim
   </primary>
  </indexterm>
  <table>
   <title>
    Sources automatically added by
    <entity>
     product
    </entity>
   </title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>
       Platform
      </entry>
      <entry>
       Message source
      </entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>
       AIX and Tru64
      </entry>
      <entry>
       <p class="Code" oldrole="synopsis">
        unix-dgram("/dev/log");
       </p>
      </entry>
     </row>
     <row>
      <entry>
       FreeBSD
      </entry>
      <entry>
       <p class="Code" oldrole="synopsis">
        unix-dgram("/var/run/log");
       </p>
       <p class="Code" oldrole="synopsis">
        unix-dgram("/var/run/logpriv" perm(0600));
       </p>
       <p class="Code" oldrole="synopsis">
        file("/dev/klog" follow-freq(0) program-override("kernel") flags(no-parse));
       </p>
       <p oldrole="para">
        For FreeBSD versions earlier than 9.1,
        <span class="Code" oldrole="parameter">
         follow-freq(1)
        </span>
        is used.
       </p>
      </entry>
     </row>
     <row>
      <entry>
       GNU/kFreeBSD
      </entry>
      <entry>
       <p class="Code" oldrole="synopsis">
        unix-dgram("/var/run/log");
       </p>
       <p class="Code" oldrole="synopsis">
        file("/dev/klog" follow-freq(0) program-override("kernel"));
       </p>
      </entry>
     </row>
     <row>
      <entry>
       HP-UX
      </entry>
      <entry>
       <p class="Code" oldrole="synopsis">
        pipe("/dev/log" pad-size(2048));
       </p>
      </entry>
     </row>
     <row>
      <entry>
       Linux
      </entry>
      <entry>
       <p class="Code" oldrole="synopsis">
        unix-dgram("/dev/log");
       </p>
       <p class="Code" oldrole="synopsis">
        file("/proc/kmsg" program-override("kernel") flags(kernel));
       </p>
       <p oldrole="para">
        Note that on Linux, the
        <span class="Code" oldrole="parameter">
         so-rcvbuf()
        </span>
        option of the
        <span class="Code" oldrole="parameter">
         system()
        </span>
        source is automatically set to 8192.
       </p>
       <indexterm>
        <primary>
         systemd
        </primary>
       </indexterm>
       <p oldrole="para">
        If the host is running under systemd,
        <entity>
         abbrev
        </entity>
        reads directly from the systemd journal file using the
        <span class="Code" oldrole="parameter">
         systemd-journal()
        </span>
        source.
       </p>
       <indexterm>
        <primary>
         multiline
        </primary>
        <secondary>
         indented-multiline
        </secondary>
       </indexterm>
       <indexterm>
        <primary>
         kmsg
        </primary>
       </indexterm>
       <p oldrole="para">
        If the kernel of the host is version 3.5 or newer, and
        <span class="Code" oldrole="filename">
         /dev/kmsg
        </span>
        is seekable,
        <entity>
         abbrev
        </entity>
        will use that instead of
        <span class="Code" oldrole="filename">
         /proc/kmsg
        </span>
        , using the
        <span class="Code" oldrole="parameter">
         multi-line-mode(indented)
        </span>
        ,
        <span class="Code" oldrole="parameter">
         keep-timestamp(no)
        </span>
        , and the
        <span class="Code" oldrole="parameter">
         format(linux-kmsg)
        </span>
        options.
       </p>
       <p oldrole="para">
        If
        <entity>
         abbrev
        </entity>
        is running in a jail or a Linux Container (LXC), it will not read from the
        <span class="Code" oldrole="filename">
         /dev/kmsg
        </span>
        or
        <span class="Code" oldrole="filename">
         /proc/kmsg
        </span>
        files.
       </p>
      </entry>
     </row>
     <row>
      <entry>
       Solaris 8
      </entry>
      <entry>
       <p class="Code" oldrole="synopsis">
        sun-streams("/dev/log");
       </p>
       <MadCap:snippetBlock src="../../shared/wnt/note-solaris-msgid.htm">
       </MadCap:snippetBlock>
      </entry>
     </row>
     <row>
      <entry>
       Solaris 9
      </entry>
      <entry>
       <p class="Code" oldrole="synopsis">
        sun-streams("/dev/log" door("/etc/.syslog_door"));
       </p>
       <MadCap:snippetBlock src="../../shared/wnt/note-solaris-msgid.htm">
       </MadCap:snippetBlock>
      </entry>
     </row>
     <row>
      <entry>
       Solaris 10
      </entry>
      <entry>
       <p class="Code" oldrole="synopsis">
        sun-streams("/dev/log" door("/var/run/syslog_door"));
       </p>
       <MadCap:snippetBlock src="../../shared/wnt/note-solaris-msgid.htm">
       </MadCap:snippetBlock>
      </entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </body>
</html>